gca2<-ggplot(annCa, aes(x=wyear, y=Ca.g.ha))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")
# has Ca flux from WS6 changed since the 1960s?
gca1<-ggplot(annCa, aes(x=wyear, y=Ca.g.ha))+geom_point()+geom_line()+
ggtitle("Reference WS6: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa, aes(x=wyear, y=Ca.g.ha))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")+
WS2 view for increased leaching Ca 1965 onward.
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa, aes(x=wyear, y=Ca.g.ha))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")
gca2
pca1<-plotly(gca1)
# has Ca flux from WS6 changed since the 1960s?
gca1<-ggplot(annCa, aes(x=wyear, y=Ca.g.ha))+geom_point()+geom_line()+
ggtitle("Reference WS6: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")
gca1
pca1<-ggplotly(gca1)
pca2<-ggplotly(gca2)
subplot(pca1, pca2, nrow=2)
margin=0.05, nrows=2,
plotfinal
pcaflux
# create single plot with 3 panels
pcaflux <- subplot(pca1, pca2,
margin=0.05, nrows=2,
shareY=TRUE, shareX=TRUE)
pcaflux
annCaws2<-aggregate(list(Ca.g.ha=dt5$Ca_flux), by=list(wyear=dt5$wyear), FUN="sum")
head(annCa)
annCaWS6<-aggregate(list(Ca.g.ha=dt4$Ca_flux), by=list(wyear=dt4$wyear), FUN="sum")
head(annCa)
# has Ca flux from WS6 changed since the 1960s?
gca1<-ggplot(annCaWS6, aes(x=wyear, y=Ca.g.ha))+geom_point()+geom_line()+
ggtitle("Reference WS6: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")
gca1
pca1<-ggplotly(gca1)
pca2<-ggplotly(gca2)
subplot(pca1, pca2, nrow=2)
pca1<-ggplotly(gca1)
pca2<-ggplotly(gca2)
subplot(pca1, pca2, nrow=2)
# create single plot with 3 panels
pcaflux <- subplot(pca1, pca2,
margin=0.05, nrows=2,
shareY=TRUE, shareX=TRUE)
pcaflux
# Combine WS6 and WS2
annCaws2$WS<-"W2"
annCaws6$WS<-"W6"
annCaWS6$WS<-"W6"
annca26<-rbind(annCaws2,annCaWS6)
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")
gca2
annca26<-cbind(annCaws2,annCaWS6)
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")
gca2
annca26<-cbind(annCaws2,annCaWS6)
annCa26<-cbind(annCaws2,annCaWS6)
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")
gca2
annCa26<-rbind(annCaws2,annCaWS6)
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")
gca2
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line()+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")+
scale_y_log10()
gca2
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line(aes(size=2))+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")+
scale_y_log10()
gca2
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line(size=2)+
ggtitle("Devegetated Watershed2: annual flux of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")+
scale_y_log10()
gca2
# has Ca flux from WS6 changed since the 1960s?
gca2<-ggplot(annCa26, aes(x=wyear, y=Ca.g.ha, col=WS))+geom_point()+geom_line(size=2)+
ggtitle("Decreasing annual Ca flux in devegetated watershed 2 and reference watershed 6  ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (g/ha)")+
geom_vline(xintercept=1965, linetype="dashed", col="red")+
geom_vline(xintercept=1968, linetype="solid", col="red")+
scale_y_log10()
gca2
pca2<-ggplotly(gca2)
# this line writes the html file to create interactive graphs for the online book
htmlwidgets::saveWidget(as_widget(plotfinal), "hwChapter/Streamwater_nutrient_flux_3.html")
pca2
inUrl1  <- "https://pasta.lternet.edu/package/data/eml/knb-lter-hbr/24/8/03013580f8955256d4c53b28b5d51c48"
infile1 <- tempfile()
try(download.file(inUrl1,infile1,method="curl"))
if (is.na(file.size(infile1))) download.file(inUrl1,infile1,method="auto")
dt6 <-read.csv(infile1,header=F
,skip=1
,sep=","
, col.names=c(
"rg",
"year",
"mo",
"precip",
"Ca",
"Mg",
"K",
"Na",
"Al",
"NH4",
"pH",
"SO4",
"NO3",
"Cl",
"PO4",
"SiO2"    ), check.names=TRUE)
unlink(infile1)
# inspect data
str(dt6)
table(dt6$rg)
dt6$DATE<-paste0(dt6$Year_Month,"-01")
dt6$DATE<-ymd(dt6$DATE) # change how R interprets Date to be a date
# add in water year
w.year <- as.numeric(format(dt6$DATE, "%Y"))
# inspect data
str(dt6)
dt6$month<-paste0("0",dt6$mo)
# inspect data
str(dt6)
dt6$DATE<-paste0(dt6$year,"-", dt6$month,"-01")
dt6$DATE<-ymd(dt6$DATE) # change how R interprets Date to be a date
head(dt6)
month <- as.numeric(format(dt6$mo, "%m"))
month
month <- as.numeric(format(dt6$mo, "%m"))
month
# inspect data
str(dt6)
dt6$month<-paste0("0",dt6$mo)
dt6[dt6$month=="010","month"]<-"10"
head(dt6)
dt6[dt6$month=="011","month"]<-"11"
dt6[dt6$month=="012","month"]<-"12"
dt6$DATE<-paste0(dt6$year,"-", dt6$month,"-01")
# add in date
dt6$DATE<-paste0(dt6$year,"-", dt6$month,"-01")
dt6$DATE<-ymd(dt6$DATE) # change how R interprets Date to be a date
# add in water year
w.year <- as.numeric(format(dt6$DATE, "%Y"))
june.july.sept <- as.numeric(format(dt6$DATE, "%m")) < 6
w.year[june.july.sept] <- w.year[june.july.sept] - 1
dt6$wyear<-w.year
# calculate annual input of Ca into WS6
head(dt6)
if (class(dt1$rg)!="factor") dt1$rg<- as.factor(dt1$rg)
if (class(dt1$precip)=="factor") dt1$precip <-as.numeric(levels(dt1$precip))[as.integer(dt1$precip) ]
if (class(dt1$precip)=="character") dt1$precip <-as.numeric(dt1$precip)
if (class(dt1$Ca)=="factor") dt1$Ca <-as.numeric(levels(dt1$Ca))[as.integer(dt1$Ca) ]
if (class(dt1$Ca)=="character") dt1$Ca <-as.numeric(dt1$Ca)
if (class(dt1$Mg)=="factor") dt1$Mg <-as.numeric(levels(dt1$Mg))[as.integer(dt1$Mg) ]
if (class(dt1$Mg)=="character") dt1$Mg <-as.numeric(dt1$Mg)
if (class(dt1$K)=="factor") dt1$K <-as.numeric(levels(dt1$K))[as.integer(dt1$K) ]
if (class(dt1$K)=="character") dt1$K <-as.numeric(dt1$K)
if (class(dt1$Na)=="factor") dt1$Na <-as.numeric(levels(dt1$Na))[as.integer(dt1$Na) ]
if (class(dt1$Na)=="character") dt1$Na <-as.numeric(dt1$Na)
if (class(dt1$Al)=="factor") dt1$Al <-as.numeric(levels(dt1$Al))[as.integer(dt1$Al) ]
if (class(dt1$Al)=="character") dt1$Al <-as.numeric(dt1$Al)
if (class(dt1$NH4)=="factor") dt1$NH4 <-as.numeric(levels(dt1$NH4))[as.integer(dt1$NH4) ]
if (class(dt1$NH4)=="character") dt1$NH4 <-as.numeric(dt1$NH4)
if (class(dt1$pH)=="factor") dt1$pH <-as.numeric(levels(dt1$pH))[as.integer(dt1$pH) ]
if (class(dt1$pH)=="character") dt1$pH <-as.numeric(dt1$pH)
if (class(dt1$SO4)=="factor") dt1$SO4 <-as.numeric(levels(dt1$SO4))[as.integer(dt1$SO4) ]
if (class(dt1$SO4)=="character") dt1$SO4 <-as.numeric(dt1$SO4)
if (class(dt1$NO3)=="factor") dt1$NO3 <-as.numeric(levels(dt1$NO3))[as.integer(dt1$NO3) ]
if (class(dt1$NO3)=="character") dt1$NO3 <-as.numeric(dt1$NO3)
if (class(dt1$Cl)=="factor") dt1$Cl <-as.numeric(levels(dt1$Cl))[as.integer(dt1$Cl) ]
if (class(dt1$Cl)=="character") dt1$Cl <-as.numeric(dt1$Cl)
if (class(dt1$PO4)=="factor") dt1$PO4 <-as.numeric(levels(dt1$PO4))[as.integer(dt1$PO4) ]
if (class(dt1$PO4)=="character") dt1$PO4 <-as.numeric(dt1$PO4)
if (class(dt1$SiO2)=="factor") dt1$SiO2 <-as.numeric(levels(dt1$SiO2))[as.integer(dt1$SiO2) ]
if (class(dt1$SiO2)=="character") dt1$SiO2 <-as.numeric(dt1$SiO2)
# Convert Missing Values to NA for non-dates
dt1$precip <- ifelse((trimws(as.character(dt1$precip))==trimws("-3.000")),NA,dt1$precip)
suppressWarnings(dt1$precip <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$precip))==as.character(as.numeric("-3.000"))),NA,dt1$precip))
dt1$Ca <- ifelse((trimws(as.character(dt1$Ca))==trimws("-3.000")),NA,dt1$Ca)
suppressWarnings(dt1$Ca <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$Ca))==as.character(as.numeric("-3.000"))),NA,dt1$Ca))
dt1$Mg <- ifelse((trimws(as.character(dt1$Mg))==trimws("-3.000")),NA,dt1$Mg)
suppressWarnings(dt1$Mg <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$Mg))==as.character(as.numeric("-3.000"))),NA,dt1$Mg))
dt1$K <- ifelse((trimws(as.character(dt1$K))==trimws("-3.000")),NA,dt1$K)
suppressWarnings(dt1$K <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$K))==as.character(as.numeric("-3.000"))),NA,dt1$K))
dt1$Na <- ifelse((trimws(as.character(dt1$Na))==trimws("-3.000")),NA,dt1$Na)
suppressWarnings(dt1$Na <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$Na))==as.character(as.numeric("-3.000"))),NA,dt1$Na))
dt1$Al <- ifelse((trimws(as.character(dt1$Al))==trimws("-3.000")),NA,dt1$Al)
suppressWarnings(dt1$Al <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$Al))==as.character(as.numeric("-3.000"))),NA,dt1$Al))
dt1$NH4 <- ifelse((trimws(as.character(dt1$NH4))==trimws("-3.000")),NA,dt1$NH4)
suppressWarnings(dt1$NH4 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$NH4))==as.character(as.numeric("-3.000"))),NA,dt1$NH4))
dt1$pH <- ifelse((trimws(as.character(dt1$pH))==trimws("-3.00")),NA,dt1$pH)
suppressWarnings(dt1$pH <- ifelse(!is.na(as.numeric("-3.00")) & (trimws(as.character(dt1$pH))==as.character(as.numeric("-3.00"))),NA,dt1$pH))
dt1$SO4 <- ifelse((trimws(as.character(dt1$SO4))==trimws("-3.000")),NA,dt1$SO4)
suppressWarnings(dt1$SO4 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$SO4))==as.character(as.numeric("-3.000"))),NA,dt1$SO4))
dt1$NO3 <- ifelse((trimws(as.character(dt1$NO3))==trimws("-3.000")),NA,dt1$NO3)
suppressWarnings(dt1$NO3 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$NO3))==as.character(as.numeric("-3.000"))),NA,dt1$NO3))
dt1$Cl <- ifelse((trimws(as.character(dt1$Cl))==trimws("-3.000")),NA,dt1$Cl)
suppressWarnings(dt1$Cl <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$Cl))==as.character(as.numeric("-3.000"))),NA,dt1$Cl))
dt1$PO4 <- ifelse((trimws(as.character(dt1$PO4))==trimws("-3.0000")),NA,dt1$PO4)
suppressWarnings(dt1$PO4 <- ifelse(!is.na(as.numeric("-3.0000")) & (trimws(as.character(dt1$PO4))==as.character(as.numeric("-3.0000"))),NA,dt1$PO4))
dt1$SiO2 <- ifelse((trimws(as.character(dt1$SiO2))==trimws("-3.000")),NA,dt1$SiO2)
suppressWarnings(dt1$SiO2 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt1$SiO2))==as.character(as.numeric("-3.000"))),NA,dt1$SiO2))
if (class(dt6$rg)!="factor") dt6$rg<- as.factor(dt6$rg)
if (class(dt6$precip)=="factor") dt6$precip <-as.numeric(levels(dt6$precip))[as.integer(dt6$precip) ]
if (class(dt6$precip)=="character") dt6$precip <-as.numeric(dt6$precip)
if (class(dt6$Ca)=="factor") dt6$Ca <-as.numeric(levels(dt6$Ca))[as.integer(dt6$Ca) ]
if (class(dt6$Ca)=="character") dt6$Ca <-as.numeric(dt6$Ca)
if (class(dt6$Mg)=="factor") dt6$Mg <-as.numeric(levels(dt6$Mg))[as.integer(dt6$Mg) ]
if (class(dt6$Mg)=="character") dt6$Mg <-as.numeric(dt6$Mg)
if (class(dt6$K)=="factor") dt6$K <-as.numeric(levels(dt6$K))[as.integer(dt6$K) ]
if (class(dt6$K)=="character") dt6$K <-as.numeric(dt6$K)
if (class(dt6$Na)=="factor") dt6$Na <-as.numeric(levels(dt6$Na))[as.integer(dt6$Na) ]
if (class(dt6$Na)=="character") dt6$Na <-as.numeric(dt6$Na)
if (class(dt6$Al)=="factor") dt6$Al <-as.numeric(levels(dt6$Al))[as.integer(dt6$Al) ]
if (class(dt6$Al)=="character") dt6$Al <-as.numeric(dt6$Al)
if (class(dt6$NH4)=="factor") dt6$NH4 <-as.numeric(levels(dt6$NH4))[as.integer(dt6$NH4) ]
if (class(dt6$NH4)=="character") dt6$NH4 <-as.numeric(dt6$NH4)
if (class(dt6$pH)=="factor") dt6$pH <-as.numeric(levels(dt6$pH))[as.integer(dt6$pH) ]
if (class(dt6$pH)=="character") dt6$pH <-as.numeric(dt6$pH)
if (class(dt6$SO4)=="factor") dt6$SO4 <-as.numeric(levels(dt6$SO4))[as.integer(dt6$SO4) ]
if (class(dt6$SO4)=="character") dt6$SO4 <-as.numeric(dt6$SO4)
if (class(dt6$NO3)=="factor") dt6$NO3 <-as.numeric(levels(dt6$NO3))[as.integer(dt6$NO3) ]
if (class(dt6$NO3)=="character") dt6$NO3 <-as.numeric(dt6$NO3)
if (class(dt6$Cl)=="factor") dt6$Cl <-as.numeric(levels(dt6$Cl))[as.integer(dt6$Cl) ]
if (class(dt6$Cl)=="character") dt6$Cl <-as.numeric(dt6$Cl)
if (class(dt6$PO4)=="factor") dt6$PO4 <-as.numeric(levels(dt6$PO4))[as.integer(dt6$PO4) ]
if (class(dt6$PO4)=="character") dt6$PO4 <-as.numeric(dt6$PO4)
if (class(dt6$SiO2)=="factor") dt6$SiO2 <-as.numeric(levels(dt6$SiO2))[as.integer(dt6$SiO2) ]
if (class(dt6$SiO2)=="character") dt6$SiO2 <-as.numeric(dt6$SiO2)
dt6$precip <- ifelse((trimws(as.character(dt6$precip))==trimws("-3.000")),NA,dt6$precip)
suppressWarnings(dt6$precip <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$precip))==as.character(as.numeric("-3.000"))),NA,dt6$precip))
dt6$Ca <- ifelse((trimws(as.character(dt6$Ca))==trimws("-3.000")),NA,dt6$Ca)
suppressWarnings(dt6$Ca <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$Ca))==as.character(as.numeric("-3.000"))),NA,dt6$Ca))
dt6$Mg <- ifelse((trimws(as.character(dt6$Mg))==trimws("-3.000")),NA,dt6$Mg)
suppressWarnings(dt6$Mg <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$Mg))==as.character(as.numeric("-3.000"))),NA,dt6$Mg))
dt6$K <- ifelse((trimws(as.character(dt6$K))==trimws("-3.000")),NA,dt6$K)
suppressWarnings(dt6$K <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$K))==as.character(as.numeric("-3.000"))),NA,dt6$K))
dt6$Na <- ifelse((trimws(as.character(dt6$Na))==trimws("-3.000")),NA,dt6$Na)
suppressWarnings(dt6$Na <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$Na))==as.character(as.numeric("-3.000"))),NA,dt6$Na))
dt6$Al <- ifelse((trimws(as.character(dt6$Al))==trimws("-3.000")),NA,dt6$Al)
suppressWarnings(dt6$Al <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$Al))==as.character(as.numeric("-3.000"))),NA,dt6$Al))
dt6$NH4 <- ifelse((trimws(as.character(dt6$NH4))==trimws("-3.000")),NA,dt6$NH4)
suppressWarnings(dt6$NH4 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$NH4))==as.character(as.numeric("-3.000"))),NA,dt6$NH4))
dt6$pH <- ifelse((trimws(as.character(dt6$pH))==trimws("-3.00")),NA,dt6$pH)
suppressWarnings(dt6$pH <- ifelse(!is.na(as.numeric("-3.00")) & (trimws(as.character(dt6$pH))==as.character(as.numeric("-3.00"))),NA,dt6$pH))
dt6$SO4 <- ifelse((trimws(as.character(dt6$SO4))==trimws("-3.000")),NA,dt6$SO4)
suppressWarnings(dt6$SO4 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$SO4))==as.character(as.numeric("-3.000"))),NA,dt6$SO4))
dt6$NO3 <- ifelse((trimws(as.character(dt6$NO3))==trimws("-3.000")),NA,dt6$NO3)
suppressWarnings(dt6$NO3 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$NO3))==as.character(as.numeric("-3.000"))),NA,dt6$NO3))
dt6$Cl <- ifelse((trimws(as.character(dt6$Cl))==trimws("-3.000")),NA,dt6$Cl)
suppressWarnings(dt6$Cl <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$Cl))==as.character(as.numeric("-3.000"))),NA,dt6$Cl))
dt6$PO4 <- ifelse((trimws(as.character(dt6$PO4))==trimws("-3.0000")),NA,dt6$PO4)
suppressWarnings(dt6$PO4 <- ifelse(!is.na(as.numeric("-3.0000")) & (trimws(as.character(dt6$PO4))==as.character(as.numeric("-3.0000"))),NA,dt6$PO4))
dt6$SiO2 <- ifelse((trimws(as.character(dt6$SiO2))==trimws("-3.000")),NA,dt6$SiO2)
suppressWarnings(dt6$SiO2 <- ifelse(!is.na(as.numeric("-3.000")) & (trimws(as.character(dt6$SiO2))==as.character(as.numeric("-3.000"))),NA,dt6$SiO2))
# inspect data
str(dt6)
dt6$month<-paste0("0",dt6$mo)
## annoyingly, we don't want the extra 0 to be in the last 3 months
dt6[dt6$month=="010","month"]<-"10"
dt6[dt6$month=="011","month"]<-"11"
dt6[dt6$month=="012","month"]<-"12"
head(dt6)
# add in date
dt6$DATE<-paste0(dt6$year,"-", dt6$month,"-01")
dt6$DATE<-ymd(dt6$DATE) # change how R interprets Date to be a date
# add in water year
w.year <- as.numeric(format(dt6$DATE, "%Y"))
june.july.sept <- as.numeric(format(dt6$DATE, "%m")) < 6
w.year[june.july.sept] <- w.year[june.july.sept] - 1
dt6$wyear<-w.year
# calculate annual input of Ca into WS6
head(dt6)
annCa_bulk<-aggregate(list(Ca.g.ha=dt5$Ca_flux), by=list(wyear=dt5$wyear), FUN="sum")
annCa_bulk<-aggregate(list(Ca.g.ha=dt6$Ca), by=list(wyear=dt6$wyear), FUN="sum")
annCa_bulk<-aggregate(list(Ca.mg.L=dt6$Ca), by=list(wyear=dt6$wyear), FUN="sum")
gca1<-ggplot(annCa_bulk, aes(x=wyear, y=Ca.mg.L))+geom_point()+geom_line()+
ggtitle("Rain gauge 22? : annual input of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (mg/L)")
gca1
ginputca1<-ggplot(annCa_bulk, aes(x=wyear, y=Ca.mg.L))+geom_point()+geom_line()+
ggtitle("Rain gauge 22? : annual input of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (mg/L)")
ginputca1
ginputca1<-ggplot(annCa_bulk, aes(x=wyear, y=Ca.mg.L))+geom_point()+geom_line()+
ggtitle("Rain gauge 22? : annual input of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (mg/L)")
ginputca1
# calculate annual input of Ca into WS6
head(dt6)
annCa_bulk<-aggregate(list(Ca.mg.L=dt6$Ca), by=list(wyear=dt6$wyear), FUN="sum")
ginputca1<-ggplot(annCa_bulk, aes(x=wyear, y=Ca.mg.L))+geom_point()+geom_line()+
ggtitle("Rain gauge 22? : annual input of Ca ")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
xlab("Water year (June 1)")+
ylab("Ca (mg/L)")
ginputca1
ginputca1
pinputca1<-ggplotly(ginputca1)
# this line writes the html file to create interactive graphs for the online book
htmlwidgets::saveWidget(as_widget(pinputca1), "hwChapter/bulk_precip_4_Ca_input.html")
# Package ID: knb-lter-hbr.29.6 Cataloging System:https://pasta.edirepository.org.
# Data set title: Forest Inventory of a Northern Hardwood Forest:     Watershed 6 1965, Hubbard Brook Experimental Forest.
inUrl1  <- "https://pasta.lternet.edu/package/data/eml/knb-lter-hbr/29/6/b1958bf84b99a05dc591b5cefe6bff78"
infile1 <- tempfile()
try(download.file(inUrl1,infile1,method="curl"))
if (is.na(file.size(infile1))) download.file(inUrl1,infile1,method="auto")
dt7 <-read.csv(infile1,header=F
,skip=1
,sep=","
, col.names=c(
"Plot",
"Zone",
"Species",
"SppNum",
"Seq",
"Tag",
"Dbh",
"Vigor",
"AbvBmss",
"BlwBmss",
"TwotoTen",
"v_10Area",
"TwotoTenArea"    ), check.names=TRUE)
unlink(infile1)
if (class(dt7$Plot)!="factor") dt7$Plot<- as.factor(dt7$Plot)
if (class(dt7$Zone)!="factor") dt7$Zone<- as.factor(dt7$Zone)
if (class(dt7$Species)!="factor") dt7$Species<- as.factor(dt7$Species)
if (class(dt7$SppNum)!="factor") dt7$SppNum<- as.factor(dt7$SppNum)
if (class(dt7$Seq)!="factor") dt7$Seq<- as.factor(dt7$Seq)
if (class(dt7$Tag)!="factor") dt7$Tag<- as.factor(dt7$Tag)
if (class(dt7$Dbh)=="factor") dt7$Dbh <-as.numeric(levels(dt7$Dbh))[as.integer(dt7$Dbh) ]
if (class(dt7$Dbh)=="character") dt7$Dbh <-as.numeric(dt7$Dbh)
if (class(dt7$Vigor)!="factor") dt7$Vigor<- as.factor(dt7$Vigor)
if (class(dt7$AbvBmss)=="factor") dt7$AbvBmss <-as.numeric(levels(dt7$AbvBmss))[as.integer(dt7$AbvBmss) ]
if (class(dt7$AbvBmss)=="character") dt7$AbvBmss <-as.numeric(dt7$AbvBmss)
if (class(dt7$BlwBmss)=="factor") dt7$BlwBmss <-as.numeric(levels(dt7$BlwBmss))[as.integer(dt7$BlwBmss) ]
if (class(dt7$BlwBmss)=="character") dt7$BlwBmss <-as.numeric(dt7$BlwBmss)
if (class(dt7$TwotoTen)!="factor") dt7$TwotoTen<- as.factor(dt7$TwotoTen)
if (class(dt7$v_10Area)=="factor") dt7$v_10Area <-as.numeric(levels(dt7$v_10Area))[as.integer(dt7$v_10Area) ]
if (class(dt7$v_10Area)=="character") dt7$v_10Area <-as.numeric(dt7$v_10Area)
if (class(dt7$TwotoTenArea)=="factor") dt7$TwotoTenArea <-as.numeric(levels(dt7$TwotoTenArea))[as.integer(dt7$TwotoTenArea) ]
if (class(dt7$TwotoTenArea)=="character") dt7$TwotoTenArea <-as.numeric(dt7$TwotoTenArea)
dt7$Tag <- as.factor(ifelse((trimws(as.character(dt7$Tag))==trimws("0")),NA,as.character(dt7$Tag)))
dt7$v_10Area <- ifelse((trimws(as.character(dt7$v_10Area))==trimws("0")),NA,dt7$v_10Area)
suppressWarnings(dt7$v_10Area <- ifelse(!is.na(as.numeric("0")) & (trimws(as.character(dt7$v_10Area))==as.character(as.numeric("0"))),NA,dt7$v_10Area))
dt7$TwotoTenArea <- ifelse((trimws(as.character(dt7$TwotoTenArea))==trimws("0")),NA,dt7$TwotoTenArea)
suppressWarnings(dt7$TwotoTenArea <- ifelse(!is.na(as.numeric("0")) & (trimws(as.character(dt7$TwotoTenArea))==as.character(as.numeric("0"))),NA,dt7$TwotoTenArea))
# Here is the structure of the input data frame:
str(dt7)
ggplot(dt7, aes(x=Zone, y=AbvBmss, col=Species))+geom_point()
ggplot(dt7, aes(x=Species, y=AbvBmss, col=Vigor))+geom_jitter()+
facet_wrap(~Zone)
ggplot(dt7, aes(x=Species, y=AbvBmss))+geom_jitter()+
facet_wrap(~Zone, nrow=5)
ggplot(dt7, aes(x=Species, y=AbvBmss))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=5)
ggplot(dt7, aes(x=Species, y=AbvBmss))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=5)+
scale_y_log10()
ggplot(dt7, aes(x=Species, y=AbvBmss))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=1)+
scale_y_log10()
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=1)+
scale_y_log10()
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack", col="black")+
facet_wrap(~Zone, nrow=1)+
scale_y_log10()
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack", aes(col="black"))+
facet_wrap(~Zone, nrow=1)+
scale_y_log10()
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack", col=black)+
facet_wrap(~Zone, nrow=1)+
scale_y_log10()
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack", col="black")+
facet_wrap(~Zone, nrow=1)+
scale_y_log10()
# Here is the structure of the input data frame:
str(dt7)
facet_wrap(~Zone, nrow=1)
dt7$abv_10_kgha<- dt7$AbvBmss /
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack"))+
facet_wrap(~Zone, nrow=1)
dt7$abv_10_kgha<- dt7$AbvBmss /
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=1)
dt7$abv_10_kgha<- dt7$AbvBmss /
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=1)
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=1)
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=1)+coord_flip()
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=1)+coord_flip()
ggplot(dt7, aes(x=Species, y=AbvBmss, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=5)+coord_flip()
dt7$abv_10_kgha<- dt7$AbvBmss / dt7$v_10Area * 10000
dt7$blw_10_kgha<- dt7$AbvBmss / dt7$TwotoTenArea * 10000
ggplot(dt7, aes(x=Species, y=abv_10_kgha, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=5)+coord_flip()
# convert biomass in kg to kg/ha by incorporating the plot area
head(dt7)
aggregate(dt7, list(abv=dt7$AbvBmss , blw=dt7$BlwBmss), by=list(Plot=dt7$Plot),FUN="sum")
aggregate(dt7, list(abv=dt7$AbvBmss , blw=dt7$BlwBmss), by=list(Plot=dt7$Plot),FUN="sum", na.rm=T)
aggregate( list(abv=dt7$AbvBmss , blw=dt7$BlwBmss), by=list(Plot=dt7$Plot), FUN="sum", na.rm=T)
tr<-aggregate( list(abv=dt7$AbvBmss , blw=dt7$BlwBmss), by=list(Plot=dt7$Plot), FUN="sum", na.rm=T)
dim(tr)
tr<-aggregate( list(abv=dt7$AbvBmss , blw=dt7$BlwBmss), by=list(Plot=dt7$Plot, zone=dt7$Zone), FUN="sum", na.rm=T)
dim(tr)
tr<-aggregate( list(abv=dt7$AbvBmss , blw=dt7$BlwBmss), by=list(Plot=dt7$Plot, Zone=dt7$Zone), FUN="sum", na.rm=T)
dim(tr)
ggplot(dt7, aes(x=Zone, y=abv_10_kgha, fill=Species))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=5)+coord_flip()
head(tr)
gather(tr, "abe","value", 3:4)
trg<-gather(tr, "abe","value", 3:4)
ggplot(trg, aes(x=Zone, y=abv, fill=abe))+geom_bar(stat="identity", position="stack")+
facet_wrap(~Zone, nrow=5)+coord_flip()
ggplot(trg, aes(x=Zone, y=value, fill=abe))+geom_bar(stat="identity", position="stack")+
coord_flip()
ggplot(trg, aes(x=Zone, y=value, fill=abe))+geom_bar(stat="identity", position="stack")
ggplot(trg, aes(x=Zone, y=value, fill=abe))+geom_bar(stat="identity", position="stack", col="black")
as.data.frame(table(tr7$Plot, tr7$Zone))
as.data.frame(table(dt7$Plot, dt7$Zone))
as.data.frame(table( tr$Zone))
tzones<-as.data.frame(table( tr$Zone))
trg$num<-tzones$Freq[match(trg$Zone, tzones$Var1)]
trg$perplot<-trg$value/trg$num
ggplot(trg, aes(x=Zone, y=perplot, fill=abe))+geom_bar(stat="identity", position="stack", col="black")
ggplot(trg, aes(x=Zone, y=value, fill=abe))+geom_bar(stat="identity", position="stack", col="black")
ggplot(trg, aes(x=Zone, y=perplot, fill=abe))+geom_bar(stat="identity", position="stack", col="black")
