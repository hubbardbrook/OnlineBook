dt2$Ca <- ifelse((trimws(as.character(dt2$Ca))==trimws("NA")),NA,dt2$Ca)
suppressWarnings(dt2$Ca <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$Ca))==as.character(as.numeric("NA"))),NA,dt2$Ca))
dt2$Mg <- ifelse((trimws(as.character(dt2$Mg))==trimws("NA")),NA,dt2$Mg)
suppressWarnings(dt2$Mg <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$Mg))==as.character(as.numeric("NA"))),NA,dt2$Mg))
dt2$K <- ifelse((trimws(as.character(dt2$K))==trimws("NA")),NA,dt2$K)
suppressWarnings(dt2$K <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$K))==as.character(as.numeric("NA"))),NA,dt2$K))
dt2$Na <- ifelse((trimws(as.character(dt2$Na))==trimws("NA")),NA,dt2$Na)
suppressWarnings(dt2$Na <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$Na))==as.character(as.numeric("NA"))),NA,dt2$Na))
dt2$TMAl <- ifelse((trimws(as.character(dt2$TMAl))==trimws("NA")),NA,dt2$TMAl)
suppressWarnings(dt2$TMAl <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$TMAl))==as.character(as.numeric("NA"))),NA,dt2$TMAl))
dt2$OMAl <- ifelse((trimws(as.character(dt2$OMAl))==trimws("NA")),NA,dt2$OMAl)
suppressWarnings(dt2$OMAl <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$OMAl))==as.character(as.numeric("NA"))),NA,dt2$OMAl))
dt2$Al_ICP <- ifelse((trimws(as.character(dt2$Al_ICP))==trimws("NA")),NA,dt2$Al_ICP)
suppressWarnings(dt2$Al_ICP <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$Al_ICP))==as.character(as.numeric("NA"))),NA,dt2$Al_ICP))
dt2$NH4 <- ifelse((trimws(as.character(dt2$NH4))==trimws("NA")),NA,dt2$NH4)
suppressWarnings(dt2$NH4 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$NH4))==as.character(as.numeric("NA"))),NA,dt2$NH4))
dt2$SO4 <- ifelse((trimws(as.character(dt2$SO4))==trimws("NA")),NA,dt2$SO4)
suppressWarnings(dt2$SO4 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$SO4))==as.character(as.numeric("NA"))),NA,dt2$SO4))
dt2$NO3 <- ifelse((trimws(as.character(dt2$NO3))==trimws("NA")),NA,dt2$NO3)
suppressWarnings(dt2$NO3 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$NO3))==as.character(as.numeric("NA"))),NA,dt2$NO3))
dt2$Cl <- ifelse((trimws(as.character(dt2$Cl))==trimws("NA")),NA,dt2$Cl)
suppressWarnings(dt2$Cl <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$Cl))==as.character(as.numeric("NA"))),NA,dt2$Cl))
dt2$PO4 <- ifelse((trimws(as.character(dt2$PO4))==trimws("NA")),NA,dt2$PO4)
suppressWarnings(dt2$PO4 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$PO4))==as.character(as.numeric("NA"))),NA,dt2$PO4))
dt2$DOC <- ifelse((trimws(as.character(dt2$DOC))==trimws("NA")),NA,dt2$DOC)
suppressWarnings(dt2$DOC <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$DOC))==as.character(as.numeric("NA"))),NA,dt2$DOC))
dt2$TDN <- ifelse((trimws(as.character(dt2$TDN))==trimws("NA")),NA,dt2$TDN)
suppressWarnings(dt2$TDN <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$TDN))==as.character(as.numeric("NA"))),NA,dt2$TDN))
dt2$DON <- ifelse((trimws(as.character(dt2$DON))==trimws("NA")),NA,dt2$DON)
suppressWarnings(dt2$DON <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$DON))==as.character(as.numeric("NA"))),NA,dt2$DON))
dt2$SiO2 <- ifelse((trimws(as.character(dt2$SiO2))==trimws("NA")),NA,dt2$SiO2)
suppressWarnings(dt2$SiO2 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$SiO2))==as.character(as.numeric("NA"))),NA,dt2$SiO2))
dt2$Mn <- ifelse((trimws(as.character(dt2$Mn))==trimws("NA")),NA,dt2$Mn)
suppressWarnings(dt2$Mn <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$Mn))==as.character(as.numeric("NA"))),NA,dt2$Mn))
dt2$Fe <- ifelse((trimws(as.character(dt2$Fe))==trimws("NA")),NA,dt2$Fe)
suppressWarnings(dt2$Fe <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$Fe))==as.character(as.numeric("NA"))),NA,dt2$Fe))
dt2$F <- ifelse((trimws(as.character(dt2$F))==trimws("NA")),NA,dt2$F)
suppressWarnings(dt2$F <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$F))==as.character(as.numeric("NA"))),NA,dt2$F))
dt2$cationCharge <- ifelse((trimws(as.character(dt2$cationCharge))==trimws("NA")),NA,dt2$cationCharge)
suppressWarnings(dt2$cationCharge <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$cationCharge))==as.character(as.numeric("NA"))),NA,dt2$cationCharge))
dt2$anionCharge <- ifelse((trimws(as.character(dt2$anionCharge))==trimws("NA")),NA,dt2$anionCharge)
suppressWarnings(dt2$anionCharge <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$anionCharge))==as.character(as.numeric("NA"))),NA,dt2$anionCharge))
dt2$ionError <- ifelse((trimws(as.character(dt2$ionError))==trimws("NA")),NA,dt2$ionError)
suppressWarnings(dt2$ionError <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$ionError))==as.character(as.numeric("NA"))),NA,dt2$ionError))
dt2$duplicate <- as.factor(ifelse((trimws(as.character(dt2$duplicate))==trimws("NA")),NA,as.character(dt2$duplicate)))
dt2$sampleType <- as.factor(ifelse((trimws(as.character(dt2$sampleType))==trimws("NA")),NA,as.character(dt2$sampleType)))
dt2$ionBalance <- ifelse((trimws(as.character(dt2$ionBalance))==trimws("NA")),NA,dt2$ionBalance)
suppressWarnings(dt2$ionBalance <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt2$ionBalance))==as.character(as.numeric("NA"))),NA,dt2$ionBalance))
dt2$canonical <- as.factor(ifelse((trimws(as.character(dt2$canonical))==trimws("NA")),NA,as.character(dt2$canonical)))
dt2$pHmetrohm <- as.factor(ifelse((trimws(as.character(dt2$pHmetrohm))==trimws("NA")),NA,as.character(dt2$pHmetrohm)))
names(dt2)
###########################
# make a new DATE column, formatted as a date.
dt2$DATE<-as.Date(dt2$date, format="%y/%m/%d")
dt2$Year<-year(dt2$DATE)
dt2$DOY<-yday(dt2$DATE)
dt2$water_year<-as.factor(dt2$waterYr)
# subset the record for only watershed 6 stream gauge
W6<-dt2[dt2$site=="W6",]
# this shows all the data available for nitrate for the stream gauge in watershed 6
w6no3<-ggplotly(ggplot(W6, aes(x=DOY, y=NO3, group=waterYr, col=waterYr))+geom_line()+scale_y_log10()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ggtitle("W6 nitrate export")+
xlab("Julian day of year")+ylab("N03 ( mg / L )"))
# this line writes the html file to create interactive graphs for the online book
htmlwidgets::saveWidget(as_widget(w6no3), "Chapter7_fig1_nitrate_export_Driscoll/w6_allyears_no3_graph.html")
#####################################################
# sum the observations by each water year
sum6<-aggregate(list(sum_NO3=W6$NO3), by=list(water_year=W6$waterYr),FUN="mean", na.rm=T)
sum6$yem<-as.Date(paste0(sum6$year,"-",sum6$month,"-01"), "%Y-%m-%d")
plot1<-ggplot(sum6, aes(x=water_year, y=sum_NO3))+geom_line(size=2, col="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Average NO3 ( mg / L)")+xlab("Water Year")+
labs( title="Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.",
subtitle= " this figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org/)",
subtitle="Hover over figure to view values, and to access zoom, pan, download, and other controls.")+
theme(  axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
axis.title.x=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)))+
geom_text(aes(x=1990, y=3, label="Soil frost events?"),size=8, color="black") +
# this is how you can add arrows to your charts
geom_segment(x = 1969 , y = 2.25, xend = 1980, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1973 , y = 2.12, xend = 1985, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1989 , y = 1.08, xend = 1990, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=1998, y=2.3, label="Ice storm"),size=8, color="black") +
geom_segment(x = 1998 , y = 1.03, xend = 1998, yend = 2.2,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 2013 , y = 0.88, xend = 2013, yend = 1.5,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=2013, y=1.7, label="?"),size=8, color="black")
plot1<- ggplotly(plot1)
plot1
plot1
# make a new DATE column, formatted as a date.
dt2$DATE<-as.Date(dt2$date, format="%y/%m/%d")
dt2$Year<-year(dt2$DATE)
dt2$DOY<-yday(dt2$DATE)
dt2$water_year<-as.factor(dt2$waterYr)
# subset the record for only watershed 6 stream gauge
W6<-dt2[dt2$site=="W6",]
# this shows all the data available for nitrate for the stream gauge in watershed 6
w6no3<-ggplotly(ggplot(W6, aes(x=DOY, y=NO3, group=waterYr, col=waterYr))+geom_line()+scale_y_log10()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ggtitle("W6 nitrate export")+
xlab("Julian day of year")+ylab("N03 ( mg / L )"))
# this line writes the html file to create interactive graphs for the online book
htmlwidgets::saveWidget(as_widget(w6no3), "Chapter7_fig1_nitrate_export_Driscoll/w6_allyears_no3_graph.html")
w6no3
# sum the observations by each water year
sum6<-aggregate(list(sum_NO3=W6$NO3), by=list(water_year=W6$waterYr),FUN="mean", na.rm=T)
sum6$yem<-as.Date(paste0(sum6$year,"-",sum6$month,"-01"), "%Y-%m-%d")
plot1<-ggplot(sum6, aes(x=water_year, y=sum_NO3))+geom_line(size=2, col="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Average NO3 ( mg / L)")+xlab("Water Year")+
labs( title="Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.",
subtitle= " this figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org/)",
subtitle="Hover over figure to view values, and to access zoom, pan, download, and other controls.")+
theme(  axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
axis.title.x=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)))+
geom_text(aes(x=1990, y=3, label="Soil frost events?"),size=8, color="black") +
# this is how you can add arrows to your charts
geom_segment(x = 1969 , y = 2.25, xend = 1980, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1973 , y = 2.12, xend = 1985, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1989 , y = 1.08, xend = 1990, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=1998, y=2.3, label="Ice storm"),size=8, color="black") +
geom_segment(x = 1998 , y = 1.03, xend = 1998, yend = 2.2,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 2013 , y = 0.88, xend = 2013, yend = 1.5,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=2013, y=1.7, label="?"),size=8, color="black")
plot1
plot1<-ggplot(sum6, aes(x=water_year, y=sum_NO3))+geom_line(size=2, col="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Average NO3 ( mg / L)")+xlab("Water Year")+
labs( title="Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.",
subtitle= " this figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org/)")+
theme(  axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
axis.title.x=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)))+
geom_text(aes(x=1990, y=3, label="Soil frost events?"),size=8, color="black") +
# this is how you can add arrows to your charts
geom_segment(x = 1969 , y = 2.25, xend = 1980, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1973 , y = 2.12, xend = 1985, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1989 , y = 1.08, xend = 1990, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=1998, y=2.3, label="Ice storm"),size=8, color="black") +
geom_segment(x = 1998 , y = 1.03, xend = 1998, yend = 2.2,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 2013 , y = 0.88, xend = 2013, yend = 1.5,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=2013, y=1.7, label="?"),size=8, color="black")
plot1
plot1<- ggplotly(plot1)
plot1
plot1<-ggplot(sum6, aes(x=water_year, y=sum_NO3))+geom_line(size=2, col="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Average NO3 ( mg / L)")+xlab("Water Year")+
labs( title="Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.",
subtitle= " this figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org/)")+
theme(  axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
axis.title.x=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)))+
geom_text(aes(x=1990, y=3, label="Soil frost events?"),size=8, color="black") +
# this is how you can add arrows to your charts
geom_segment(x = 1969 , y = 2.25, xend = 1980, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1973 , y = 2.12, xend = 1985, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1989 , y = 1.08, xend = 1990, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=1998, y=2.3, label="Ice storm"),size=8, color="black") +
geom_segment(x = 1998 , y = 1.03, xend = 1998, yend = 2.2,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 2013 , y = 0.88, xend = 2013, yend = 1.5,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=2013, y=1.7, label="?"),size=8, color="black")
plot1
plot1<-ggplot(sum6, aes(x=water_year, y=sum_NO3))+geom_line(size=2, col="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Average NO3 ( mg / L)")+xlab("Water Year")+
labs( title="Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.",
subtitle= "       This figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org/)")+
theme(  axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
axis.title.x=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)))+
geom_text(aes(x=1990, y=3, label="Soil frost events?"),size=8, color="black") +
# this is how you can add arrows to your charts
geom_segment(x = 1969 , y = 2.25, xend = 1980, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1973 , y = 2.12, xend = 1985, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1989 , y = 1.08, xend = 1990, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=1998, y=2.3, label="Ice storm"),size=8, color="black") +
geom_segment(x = 1998 , y = 1.03, xend = 1998, yend = 2.2,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 2013 , y = 0.88, xend = 2013, yend = 1.5,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=2013, y=1.7, label="?"),size=8, color="black")
plot1
plot1<- ggplotly(plot1)
plot1
plot1<-ggplot(sum6, aes(x=water_year, y=sum_NO3))+geom_line(size=2, col="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Average NO3 ( mg / L)")+xlab("Water Year")+
labs( title="Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.",
subtitle= "This figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org/)")+
theme(  axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
axis.title.x=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)))+
geom_text(aes(x=1990, y=3, label="Soil frost events?"),size=8, color="black") +
# this is how you can add arrows to your charts
geom_segment(x = 1969 , y = 2.25, xend = 1980, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1973 , y = 2.12, xend = 1985, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1989 , y = 1.08, xend = 1990, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=1998, y=2.3, label="Ice storm"),size=8, color="black") +
geom_segment(x = 1998 , y = 1.03, xend = 1998, yend = 2.2,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 2013 , y = 0.88, xend = 2013, yend = 1.5,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=2013, y=1.7, label="?"),size=8, color="black")
plot1
plot1<- ggplotly(plot1)
plot1
plot1<- ggplotly(plot1) %>%
layout(title = list(text = paste0('US State Population and Life Expectancy',
'<br>',
'<sup>',
'Life expectancy 1969-1971; Population estimate as of July 1, 1975',
'</sup>')))
plot1
plot1<-ggplot(sum6, aes(x=water_year, y=sum_NO3))+geom_line(size=2, col="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Average NO3 ( mg / L)")+xlab("Water Year")+
labs( title="Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.",
subtitle= "This figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org/)")+
theme(  axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
axis.title.x=element_text(size=17, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)))+
geom_text(aes(x=1990, y=3, label="Soil frost events?"),size=8, color="black") +
# this is how you can add arrows to your charts
geom_segment(x = 1969 , y = 2.25, xend = 1980, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1973 , y = 2.12, xend = 1985, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_segment(x = 1989 , y = 1.08, xend = 1990, yend = 2.8,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))+
geom_text(aes(x=1998, y=2.3, label="Ice storm"),size=8, color="black") +
geom_segment(x = 1998 , y = 1.03, xend = 1998, yend = 2.2,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))
plot1
plot1
plot1<- ggplotly(plot1) %>%
layout(title = list(text = paste0('Average annual nitrate concentration in the stream draining WS6 at the Hubbard Brook Experimental Forest.',
'<br>',
'<sup>',
'This figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org)',
'</sup>')))
plot1
# this line writes the html file to create interactive graphs for the online book
htmlwidgets::saveWidget(as_widget(plot1), "NitrogenCycling/fig1_nitrate_graph.html")
p1<-ggplotly(g1)
p1
htmlwidgets::saveWidget(as_widget(p1), "climateChange/LAI_WW6.html")
g1<-ggplot(lai_year, aes(x=Year, y=LAI))+geom_point()+  geom_line()+
geom_point(data=lai_plot, aes(x=Year, y=LAI, col=Elevation))+
geom_line(data=lai_plot, aes(x=Year, y=LAI, col=Elevation))+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
ylab("Leaf area index")
p1<-ggplotly(g1) %>%
layout(title = list(text = paste0('Average leaf area index in Bear Brook at the Hubbard Brook Experimental Forest.',
'<br>',
'<sup>',
'This figure is updated with current data available in the Envrironmental Data Initiative Repository (https://portal.edirepository.org)',
'</sup>')))
p1
htmlwidgets::saveWidget(as_widget(p1), "climateChange/LAI_WW6.html")
p1
htmlwidgets::saveWidget(as_widget(p1), "climateChange/LAI_WW6.html")
#Use the libraries
library("VFS")
library("plyr")
library("ggplot2")
library("trend")
library(readr)
library(plotly)
## if you don't want to pull from external
#write.csv(merge_annual, file="C:\\Users\\bears\\Documents\\GitHub\\NH_regional.csv")
merge_annual <-read.csv("C:\\Users\\bears\\Documents\\GitHub\\NH_regional.csv")
merge_annual
#Download precipitation data by watershed
inUrl1  <- "https://pasta.lternet.edu/package/data/eml/knb-lter-hbr/14/14/c606bfe2f2deb3fa3eabf692ae15f02d"
infile1 <- tempfile()
try(download.file(inUrl1,infile1,method="curl"))
if (is.na(file.size(infile1))) download.file(inUrl1,infile1,method="auto")
dt1 <-read.csv(infile1,header=F
,skip=1
,sep=","
, col.names=c(
"DATE",
"watershed",
"Precip"    ), check.names=TRUE)
unlink(infile1)
# attempting to convert dt1$DATE dateTime string to R date structure (date or POSIXct)
tmpDateFormat<-"%Y-%m-%d"
tmp1DATE<-as.Date(dt1$DATE,format=tmpDateFormat)
# Keep the new dates only if they all converted correctly
if(length(tmp1DATE) == length(tmp1DATE[!is.na(tmp1DATE)])){dt1$DATE <- tmp1DATE } else {print("Date conversion failed for dt1$DATE. Please inspect the data and do the date conversion yourself.")}
rm(tmpDateFormat,tmp1DATE)
if (class(dt1$watershed)!="factor") dt1$watershed<- as.factor(dt1$watershed)
if (class(dt1$Precip)=="factor") dt1$Precip <-as.numeric(levels(dt1$Precip))[as.integer(dt1$Precip) ]
if (class(dt1$Precip)=="character") dt1$Precip <-as.numeric(dt1$Precip)
precipitation <- dt1
colnames(precipitation) <- c("date","watershed","precip_mm")
precipitation$watershed <- as.character(precipitation$watershed)
precipitation$watershed[(precipitation$watershed == "W1")] <- 1
precipitation$watershed[(precipitation$watershed == "W2")] <- 2
precipitation$watershed[(precipitation$watershed == "W3")] <- 3
precipitation$watershed[(precipitation$watershed == "W4")] <- 4
precipitation$watershed[(precipitation$watershed == "W5")] <- 5
precipitation$watershed[(precipitation$watershed == "W6")] <- 6
precipitation$watershed[(precipitation$watershed == "W7")] <- 7
precipitation$watershed[(precipitation$watershed == "W8")] <- 8
precipitation$watershed[(precipitation$watershed == "W9")] <- 9
temp_date <- precipitation$date
year <- substr(temp_date,1,4)
year <- as.matrix(year)
month <-  substr(temp_date,6,7)
month <- as.matrix(month)
year_month <- paste(year,month,sep="-")
year_month <- as.matrix(year_month)
# water year June 1st - May 31st
# assign water year depending if month < 6
water_year <- function(year,month)
{
tYear <- as.numeric(year)
tMon <- as.numeric(month)
WYear <- ifelse(tMon<6,tYear-1,tYear)
return (WYear)
}
wy <- water_year(year,month)
wy <- as.matrix(wy)
precipitation <- cbind(precipitation,wy)
precipitation_W1 <- subset(precipitation,(watershed==1))
precipitation_W2 <- subset(precipitation,(watershed==2))
precipitation_W3 <- subset(precipitation,(watershed==3))
precipitation_W4 <- subset(precipitation,(watershed==4))
precipitation_W5 <- subset(precipitation,(watershed==5))
precipitation_W6 <- subset(precipitation,(watershed==6))
precipitation_W7 <- subset(precipitation,(watershed==7))
precipitation_W8 <- subset(precipitation,(watershed==8))
precipitation_W9 <- subset(precipitation,(watershed==9))
precipitation_W1$watershed <- NULL
precipitation_W2$watershed <- NULL
precipitation_W3$watershed <- NULL
precipitation_W4$watershed <- NULL
precipitation_W5$watershed <- NULL
precipitation_W6$watershed <- NULL
precipitation_W7$watershed <- NULL
precipitation_W8$watershed <- NULL
precipitation_W9$watershed <- NULL
colnames(precipitation_W1) <- c("date","precip_mm_W1","wy")
colnames(precipitation_W2) <- c("date","precip_mm_W2","wy")
colnames(precipitation_W3) <- c("date","precip_mm_W3","wy")
colnames(precipitation_W4) <- c("date","precip_mm_W4","wy")
colnames(precipitation_W5) <- c("date","precip_mm_W5","wy")
colnames(precipitation_W6) <- c("date","precip_mm_W6","wy")
colnames(precipitation_W7) <- c("date","precip_mm_W7","wy")
colnames(precipitation_W8) <- c("date","precip_mm_W8","wy")
colnames(precipitation_W9) <- c("date","precip_mm_W9","wy")
WY_day_count_W1 <- count(precipitation_W1, "wy")
keep_wy_W1 <- subset(WY_day_count_W1,(freq>=365))
precipitation_W1_merge <- merge(precipitation_W1,keep_wy_W1, by = c("wy"))
precipitation_W1_merge$freq <- NULL
WY_day_count_W2 <- count(precipitation_W2, "wy")
keep_wy_W2 <- subset(WY_day_count_W2,(freq>=365))
precipitation_W2_merge <- merge(precipitation_W2,keep_wy_W2, by = c("wy"))
precipitation_W2_merge$freq <- NULL
WY_day_count_W3 <- count(precipitation_W3, "wy")
keep_wy_W3 <- subset(WY_day_count_W3,(freq>=365))
precipitation_W3_merge <- merge(precipitation_W3,keep_wy_W3, by = c("wy"))
precipitation_W3_merge$freq <- NULL
WY_day_count_W4 <- count(precipitation_W4, "wy")
keep_wy_W4 <- subset(WY_day_count_W4,(freq>=365))
precipitation_W4_merge <- merge(precipitation_W4,keep_wy_W4, by = c("wy"))
precipitation_W4_merge$freq <- NULL
WY_day_count_W5 <- count(precipitation_W5, "wy")
keep_wy_W5 <- subset(WY_day_count_W5,(freq>=365))
precipitation_W5_merge <- merge(precipitation_W5,keep_wy_W5, by = c("wy"))
precipitation_W5_merge$freq <- NULL
WY_day_count_W6 <- count(precipitation_W6, "wy")
keep_wy_W6 <- subset(WY_day_count_W6,(freq>=365))
precipitation_W6_merge <- merge(precipitation_W6,keep_wy_W6, by = c("wy"))
precipitation_W6_merge$freq <- NULL
WY_day_count_W7 <- count(precipitation_W7, "wy")
keep_wy_W7 <- subset(WY_day_count_W7,(freq>=365))
precipitation_W7_merge <- merge(precipitation_W7,keep_wy_W7, by = c("wy"))
precipitation_W7_merge$freq <- NULL
WY_day_count_W8 <- count(precipitation_W8, "wy")
keep_wy_W8 <- subset(WY_day_count_W8,(freq>=365))
precipitation_W8_merge <- merge(precipitation_W8,keep_wy_W8, by = c("wy"))
precipitation_W8_merge$freq <- NULL
WY_day_count_W9 <- count(precipitation_W9, "wy")
keep_wy_W9 <- subset(WY_day_count_W9,(freq>=365))
precipitation_W9_merge <- merge(precipitation_W9,keep_wy_W9, by = c("wy"))
precipitation_W9_merge$freq <- NULL
pre <- merge(precipitation_W1_merge,precipitation_W2_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W3_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W4_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W5_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W6_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W7_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W8_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W9_merge, by = c("date","wy"), all = TRUE)
pre$date <- NULL
pre_wy <- aggregate(pre, by=list(pre$wy), FUN = sum)
pre_wy <- pre_wy[c("Group.1", "precip_mm_W3")]
colnames(pre_wy) <- c("wy","hb_pre_w3_mm")
merger <- merge(pre_wy, merge_annual, by = c("wy"), all = TRUE)
head(merger)
###############
# Re-run with merger just for 1883 to 2014
####################
#merger<-merger[merger$wy < 2015,]
hb_only <- merger[!is.na(merger$hb_pre_w3_mm), ]
hb_pre_sen <- sens.slope(hb_only$hb_pre_w3_mm, conf.level = 0.95)
hb_only$hb_pre_slp <- NA
hb_only$hb_pre_slp[1] <- median(hb_only$hb_pre_w3_mm)-
(((nrow(hb_only)-1)/2)*hb_pre_sen$estimate)
hb_only$hb_pre_slp[nrow(hb_only)] <- median(hb_only$hb_pre_w3_mm)+
(((nrow(hb_only)-1)/2)*hb_pre_sen$estimate)
hb_only$hb_pre_slp <-
c(na.approx(hb_only$hb_pre_slp))
length(hb_only$hb_pre_slp)*hb_pre_sen$estimate
regional_pre_sen <- sens.slope(hb_only$regional_pre_avg_mm, conf.level = 0.95)
regional_pre_sen
hb_only$regional_pre_slp <- NA
hb_only$regional_pre_slp[1] <- median(hb_only$regional_pre_avg_mm)-
(((nrow(hb_only)-1)/2)*regional_pre_sen$estimate)
hb_only$regional_pre_slp[nrow(hb_only)] <- median(hb_only$regional_pre_avg_mm)+
(((nrow(hb_only)-1)/2)*regional_pre_sen$estimate)
hb_only$regional_pre_slp <-
c(na.approx(hb_only$regional_pre_slp))
length(hb_only$regional_pre_slp)*regional_pre_sen$estimate
hb_only$hb_pre_w3_mm <- NULL
hb_only$regional_pre_avg_mm <- NULL
pre_trends <- merge(merger,hb_only, by = c("wy"), all = TRUE)
hb_pre_w3_yr_count <- sum(sapply(pre_trends$hb_pre_slp, function(x) sum(!is.na(x))))
hb_pre_w3_yr_count_slp_time <- hb_pre_sen$estimates * hb_pre_w3_yr_count
hb_pre_w3_sen_slp <- format(round(hb_pre_sen$estimates, digits=1), nsmall = 1)
hb_pre_w3_sen_p <- format(round(hb_pre_sen$p.value, digits=4), nsmall = 3, scientific = F)
regional_pre_yr_count <- sum(sapply(pre_trends$regional_pre_slp, function(x) sum(!is.na(x))))
regional_pre_yr_count_slp_time <- regional_pre_sen$estimates * regional_pre_yr_count
regional_pre_sen_slp <- format(round(regional_pre_sen$estimates, digits=1), nsmall =1)
regional_pre_sen_p <- format(round(regional_pre_sen$p.value, digits=4), nsmall = 3, scientific = F)
maxval <- max(c(pre_trends$hb_pre_w3_mm, pre_trends$regional_pre_avg_mm), na.rm=TRUE)
minval <- min(c(pre_trends$hb_pre_w3_mm, pre_trends$regional_pre_avg_mm), na.rm=TRUE)
maxwy <- max(c(hb_only$wy), na.rm=TRUE)
library("zoo")
library("ggpmisc")
head(pre_trends)
precipit <- ggplot() +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_w3_mm), colour="gold3", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_slp), linetype = "dashed", colour="gold3", lwd=0.6) + xlab("")+
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_avg_mm), colour="blue", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_slp), linetype = "dashed", colour="blue", lwd=0.6) + xlab("")+
ylab("Precipitation (mm)")+
geom_smooth(method="lm", se="F")+
theme_bw()+
scale_x_continuous(limits = c(1890,(ceiling((maxwy-10)/20)*20)+10), expand = c(0,0), breaks = seq(1890,(ceiling((maxwy-10)/20)*20)+10, by = 20)) +
scale_y_continuous(limits = c((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100), expand = c(0,0),breaks = seq((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100, by = 200)) +
theme(plot.title = element_text(size = 20, face = "bold", hjus=0.04, vjus=-9),
plot.background = element_rect(fill = "transparent"),
plot.margin = unit(c(3,7,-3,1), "mm"),
axis.ticks = element_line(colour = "black", size = 0.5),
axis.ticks.length=unit(.25, "cm"),
axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=20, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x=element_text(size=20, colour = "black", margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1, linetype="solid"),
panel.background = element_rect(fill = "transparent",colour = NA)
) +
geom_text(aes(x=1955, y=2000, label = paste0("Hubbard Brook, NH has increased ",hb_pre_w3_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",hb_pre_w3_sen_p)), size = 8, color="gold3") +
geom_text(aes(x=1955, y=1900, label = paste0("Regional average has increased ",regional_pre_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",regional_pre_sen_p)), size = 8, color="blue") +
xlab("Water Year (June 1)")
precipit
getwd()
pc<-ggplotly(precipit)
pc
htmlwidgets::saveWidget(as_widget(pc), "climateChange/regional_and_HB_precip.html")
