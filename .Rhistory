i<-1970
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
d70<-rg1cum
table(PRD$decade)
i<-1980
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
d80<-rg1cum
table(PRD$decade)
i<-1990
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
d90<-rg1cum
i<-2000
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
d00<-rg1cum
i<-2010
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
d10<-rg1cum
table(PRD$year)
rg<-rbind(d60,d70,d80,d90,d00,d10)
rg$precip<-rep(seq(2.5,137.5, 5), 6)
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+
scale_x_continuous(breaks=seq(0,140))
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("Precipitation ammount")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+
scale_x_continuous(breaks=seq(0,140))
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("Precipitation ammount")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+
scale_x_continuous()
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("Precipitation ammount")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("Precipitation ammount")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("Precipitation ammount")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))
g.dia
#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1956-01-01 00:00:00") & DATE < as.POSIXct("1965-01-01 00:00:00"))
head(part)
tail(part) # here you can see the start and end of the 'part'.
##  Choose your decade to write the file for
write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv", row.names = F)
#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1965-01-01 00:00:00") & DATE < as.POSIXct("1975-01-01 00:00:00"))
head(part)
tail(part) # here you can see the start and end of the 'part'.
##  Choose your decade to write the file for
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv", row.names = F)
write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1965-1974.csv", row.names = F)
#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1975-01-01 00:00:00") & DATE < as.POSIXct("1985-01-01 00:00:00"))
head(part)
tail(part) # here you can see the start and end of the 'part'.
##  Choose your decade to write the file for
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1965-1974.csv", row.names = F)
write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1975-1984.csv", row.names = F)
#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1985-01-01 00:00:00") & DATE < as.POSIXct("1995-01-01 00:00:00"))
head(part)
tail(part) # here you can see the start and end of the 'part'.
##  Choose your decade to write the file for
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1965-1974.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1975-1984.csv", row.names = F)
write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1985-1994.csv", row.names = F)
#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1995-01-01 00:00:00") & DATE < as.POSIXct("2005-01-01 00:00:00"))
head(part)
tail(part) # here you can see the start and end of the 'part'.
#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1995-01-01 00:00:00") & DATE < as.POSIXct("2011-01-01 00:00:00"))
head(part)
tail(part) # here you can see the start and end of the 'part'.
#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1995-01-01 00:00:00") & DATE < as.POSIXct("2012-01-01 00:00:00"))
head(part)
tail(part) # here you can see the start and end of the 'part'.
##  Choose your decade to write the file for
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1965-1974.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1975-1984.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1985-1994.csv", row.names = F)
write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1995-2011.csv", row.names = F)
##  Choose your decade to write the file for
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1965-1974.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1975-1984.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1985-1994.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1995-2011.csv", row.names = F)
write.csv(big_dat, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1.csv", row.names = F)
rm(list = ls())
# Check for and install required packages
for (package in c('tidyverse', 'lubridate')) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
}
}
#set working directory so it works on both windows and unix OS:
path <- "~/../Box/External-HBEF-DATA/precip_charts_digitize"
if( .Platform$OS.type == "unix" )
path <- "~/Box/External-HBEF-DATA/precip_charts_digitize"
path<-"C:\\Users\\bears\\Box\\precip_charts_digitize" # Alex Y's path
setwd(path)
#read in the 15-minute data
#temporary location:
RG1 <- read.csv("RG1/RG1_L3_cleaned/L3_precip_15min_RG1.csv", stringsAsFactors = F)
RG1$DATE <- as.POSIXct(RG1$DATE, format = "%Y-%m-%d %H:%M:%S", tz = "EST")
#RG1 <- RG1[-which(is.na(RG1$DATE)),]
str(RG1)
summary(RG1)
RG1$DATE<-ymd_hms(RG1$DATE)
RG1$DAY<-as.Date(RG1$DATE)
RG1$year<-year(RG1$DATE)
RG1$month<-month(RG1$DATE)
RG1$week<-week(RG1$DATE)
RG1$day<-day(RG1$DATE)
head(RG1)
#temporary location:
RG1 <- read.csv("RG1/RG1_L3_cleaned/L3_precip_15min_RG1.csv", stringsAsFactors = F)
RG1$DATE <- as.POSIXct(RG1$DATE, format = "%Y-%m-%d %H:%M:%S", tz = "EST")
#RG1 <- RG1[-which(is.na(RG1$DATE)),]
str(RG1)
summary(RG1)
#aggregate 15-minute to daily values:
RG1_daily <- RG1 %>%
mutate(DAY = lubridate::floor_date(DATE, unit = "day")) %>%
group_by(DAY) %>%
dplyr::summarize(daily_ppt = sum(ppt)) %>% #, na.rm=T
ungroup()
RG1_daily$DAY <- as.Date(RG1_daily$DAY)
str(RG1_daily)
summary(RG1_daily)
# #RUN ONCE
# #format PRD files that have daily totals recorded by hand (from Amey):
#
# #create list for storing data
# data <- list()
#
# #these are the files to format
# file_list <- list.files("document_methods_comparison/prd/prd")
#
# #format each file in a loop:
# for(i in seq_along(file_list)){
#
# #load file
# test <- readLines(paste0("document_methods_comparison/prd/prd/",file_list[i]))
#
# #remove rows containing specific strings:
# test <- test[!grepl("HBEF", test)]
# test <- test[!grepl("MONTH", test)]
# test <- test[!grepl("GAGE", test)]
# #split the string into individual characters:
# test2 <- strsplit(test, "")
# #remove empty rows
# test3 <- test2[lapply(test2,length)>0]
# #put together
# test4 <- do.call(rbind, test3)
#
# #extract and convert dates
# date <- paste0(test4[,4], test4[,5], test4[,6], test4[,7], test4[,8], test4[,9])
# date <- as.Date(date, format = "%y%m%d")
# ## Now correct the dates that havn't yet occurred (incorrect century)
# date <- ifelse(date > "2015-01-01", format(date, "19%y-%m-%d"), format(date))
#
# #extract data
# RG1 <- paste0(test4[,11], test4[,12], test4[,13], test4[,14], test4[,15], test4[,16])
# RG1 <- as.numeric(RG1)
# RG6 <- paste0(test4[,17], test4[,18], test4[,19], test4[,20], test4[,21], test4[,22])
# RG6 <- as.numeric(RG6)
# RG10 <- paste0(test4[,23], test4[,24], test4[,25], test4[,26], test4[,27], test4[,28])
# RG10 <- as.numeric(RG10)
# RG14 <- paste0(test4[,29], test4[,30], test4[,31], test4[,32], test4[,33], test4[,34])
# RG14 <- as.numeric(RG14)
#
# #add to data list
# data[[i]] <- cbind(as.character(date), RG1, RG6, RG10, RG14)
#
# #clean up:
# rm(test, test2, test3, test4, RG1, RG6, RG10, RG14, date)
# }
#
# #put it all together and format:
# dat <- as.data.frame(do.call(rbind, data))
# names(dat) <- c("DAY", "RG1", "RG6", "RG10", "RG14")
# dat$DAY <- as.Date(dat$DAY)
# dat <- dat %>%
#   mutate_if(is.factor, as.character) %>%
#   mutate_if(is.character, as.numeric)
# str(dat)
# summary(dat)
#
# write.csv(dat, file = "document_methods_comparison/prd/PRD_1965-2011.csv", row.names = F)
#read in daily totals 1965-2011 read by hand from the charts (obtained digital PRD files from Amey)
PRD <- read.csv("document_methods_comparison/prd/PRD_1965-2011.csv", stringsAsFactors=F)
PRD$DAY <- as.Date(PRD$DAY, tz = "EST")
PRD <- PRD[,c("DAY", "RG1")]
#read in daily totals for RG1 1956 - 1964 read by hand off the charts (in inches) and entered into a spreadsheet by Nina Lany and Sam Auger on 1/15/2020:
PRD2 <- read.csv("document_methods_comparison/prd/PRD_1956-1964.csv", stringsAsFactors=F)
PRD2$RG1 <- PRD2$RG1 * 25.4 #mm per inch conversion factor
colnames(PRD2) <- c("DAY", "RG1")
PRD2$DAY <- as.Date(PRD2$DAY, format = "%m/%d/%Y", tz = "EST")
#combine
PRD <- rbind(PRD2, PRD)
str(PRD)
summary(PRD)
str(RG1_daily)
#merge the two:
dat <- merge(RG1_daily, PRD, by = "DAY", all.x = T, all.y=F)
str(dat)
summary(dat)
#plot
# pdf(file = "document_methods_comparison/figs/hand_vs_digitized_1975-1984.pdf", height = 6, width = 6)
# plot(dat$RG1, dat$daily_ppt, xlim = c(0,130), ylim = c(0,130), xlab = "Daily precipitation sum (mm) - by hand", ylab = "Daily precipitation sum (mm) - digitized")
# abline(a=0, b=1)
# dev.off()
#AlexY added this graph in ggplotly. useful for hover-over identification. Might need to library(plotly) and ggplot2
ggplotly( ggplot(dat, aes(x=RG1, y=daily_ppt, group=DAY))+geom_point()+
xlab("Daily precip (mm) RG1- by hand")+ylab("Daily precip (mm) - digitized"))
library(ggplot2)
library(plotly)
#AlexY added this graph in ggplotly. useful for hover-over identification. Might need to library(plotly) and ggplot2
ggplotly( ggplot(dat, aes(x=RG1, y=daily_ppt, group=DAY))+geom_point()+
xlab("Daily precip (mm) RG1- by hand")+ylab("Daily precip (mm) - digitized"))
par(mfrow = c(1,2))
boxplot(comp$diffs, ylab = "Precipitation difference (mm)")
#look closely at days that are different
comp <- dat[complete.cases(dat),]
comp$diffs <- comp$daily_ppt - comp$RG1 #digitized - manual
str(comp)
summary(comp)
par(mfrow = c(1,2))
boxplot(comp$diffs, ylab = "Precipitation difference (mm)")
abline(h = 3, col = "red", lty = 2)
abline(h = -3, col = "red", lty = 2)
hist(comp$diffs, breaks = 100, xlab = "Precipitation difference (mm)", main = "")
abline(v=0, col ="red")
dev.off()
#which days have difference greater than 5 mm (0.2 in) and convert to inches (makes it easier to check charts):
QC <- comp[which(abs(comp$diffs) > 5),]
QC <- QC %>%
mutate(daily_ppt = daily_ppt/25.4) %>%
mutate(RG1 = RG1/25.4) %>%
mutate(diffs = diffs/25.4)
str(QC)
summary(QC)
head(dat)
dat$week<-week(dat$DAY)
dat$year<-year(dat$DAY)
dat$month<-month(dat$DAY)
da<-aggregate(list(PRD=dat$RG1, digitize=dat$daily_ppt), by=list(week=dat$week, year=dat$year, month=dat$month), FUN="sum", na.rm=T)
ggplot(da, aes(x=digitize, y=PRD,col=month))+geom_point()+
geom_abline(slope=.9538, intercept= 10.95)+
geom_abline(slope=.9538, intercept= -9.95)+coord_fixed()+
ggtitle("Weekly comparisons- many weeks with PRD but no digitized!")
da$diffs<- abs( da$digitize - da$PRD)
hist(da$diffs, breaks=200)
summary(da$diffs)
hist(da$diffs, breaks=200)
abline(v=5, col ="red")
abline(v=10, col ="red")
quantile(da$diffs, .8)
quantile(da$diffs, .9)
not<-da[da$diffs>10 ,]
sort(not$diffs, decreasing=T)
head(not)
ggplot(not, aes(x=year, y=diffs, col=month))+geom_bar(stat="identity",position="stack")
ggplot(not, aes(x=year, y=diffs, fill=month))+geom_bar(stat="identity",position="stack")
ggplot(not, aes(x=year, y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")
ggplot(not, aes(x=year, y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
scale_x_continuous()
ggplot(not, aes(x=as.factror(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 5))
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 15))
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 15, hjust=1))
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 15, hjust=5))
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 15, vjust=5))
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 15, vjust=-1))
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 15, vjust=-.5))
ggplot(not, aes(x=as.factor(year), y=diffs, fill=month))+geom_bar(stat="identity",position="stack", col="black")+
theme(axis.text.x = element_text(angle = 90, size = 15, vjust=.5))
write.csv(not, file = "RG1/scripts/RG1_weekly_diffs.csv", row.names = F)
RG1 <- read.csv("RG1/RG1_L3_cleaned/L3_precip_15min_RG1.csv", stringsAsFactors = F)
RG1$DATE <- as.POSIXct(RG1$DATE, format = "%Y-%m-%d %H:%M:%S", tz = "EST")
#RG1 <- RG1[-which(is.na(RG1$DATE)),]
str(RG1)
summary(RG1)
RG1$DATE<-ymd_hms(RG1$DATE)
RG1$DAY<-as.Date(RG1$DATE)
RG1$year<-year(RG1$DATE)
RG1$month<-month(RG1$DATE)
RG1$week<-week(RG1$DATE)
RG1$day<-day(RG1$DATE)
head(RG1)
table(is.na(RG1$ppt, RG1$year))
table(is.na(RG1$ppt), RG1$year)
table( RG1$year,is.na(RG1$ppt))
nap<-as.data.frame(table( RG1$year,is.na(RG1$ppt)))
# / 35040 15 minut
nap$div<-nap$Freq/35040
nap
# / 35040 15 minut
nap$div<-nap$Freq/96
nap
# / 35040 15 minut
nap$div<-nap$Freq/356
nap
# / 35040 15 minut
nap$div<-nap$Freq/365
nap
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")
# / 35040 15 minut
nap$div<-nap$Freq/365/96
nap
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")
summary(nap[nap$Var2=="TRUE",div])
summary(nap[nap$Var2=="TRUE","div"])
# / 35040 15 minut
nap$div<-nap$Freq/365
# / 35040 15 minut
nap$div<-nap$Freq/365  # gaps per day
nap
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")
# / 35040 15 minut
nap$div<-nap$Freq/365/96 #   % NA values
nap
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")
summary(nap[nap$Var2=="TRUE","div"]) # I see that the median value across years is
summary(nap[nap$Var2=="TRUE","dna"]) # I see that the median value across years is 2.5% of the day is a gap
nap$dna<-nap$Freq/365
summary(nap[nap$Var2=="TRUE","dna"]) # I see that the median value across years is 2.5% of the day is a gap
1/24
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=40, vjust=.5, hjust=1)))
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=40, vjust=.5, hjust=1))
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+
scale_fill_manual('Is NA or not', values=c('orange','dark green'))
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+
scale_fill_manual('Is NA or not', values=c('red','dark green'))
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+
scale_fill_manual('Is NA or not', values=c('dark green', light orange))
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+
scale_fill_manual('Is NA or not', values=c('dark green',  "orange"))
ggplot(nap, aes(x=Var1, y=div, fill=Var2))+geom_bar(stat="identity",position="stack")+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+
scale_fill_manual('Is NA or not', values=c('dark green',  "magenta"))
#AlexY added this graph in ggplotly. useful for hover-over identification. Might need to library(plotly) and ggplot2
ggplotly( ggplot(dat, aes(x=RG1, y=daily_ppt, group=DAY))+geom_point()+
xlab("Daily precip (mm) RG1- by hand")+ylab("Daily precip (mm) - digitized"))
guse<-subset(tl3, year== 1973 & week ==c(26))
# bring PRD into guse
guse$daily<-PRD$RG1[match(guse$DAY, PRD$DAY)]
guse$d96<-guse$daily/96 # 15 min intervals in a day
p1<-ggplotly(ggplot(guse, aes(x=DATE, y=d96, group=month))+geom_point()+geom_line()+
geom_point(aes(x=DATE, y=ppt, col=year))+geom_line(aes(x=DATE, y=ppt,col=year))+
scale_x_datetime(date_breaks = "1 day") +
facet_wrap(~week, scale='free_x',ncol=1, strip.position="left")+
ylab("Precip (mm)")+ theme(axis.text.x = element_text(angle=40, vjust=.5, hjust=1)))
p1
#      QAQC graphs by time period (weeks)
#####################
#read in daily totals 1965-2011 read by hand from the charts (obtained digital PRD files from Amey)
PRD <- read.csv("document_methods_comparison/prd/PRD_1965-2011.csv", stringsAsFactors=F)
PRD$DAY <- as.Date(PRD$DAY, tz = "EST")
PRD <- PRD[,c("DAY", "RG1")]
#read in daily totals for RG1 1956 - 1964 read by hand off the charts (in inches) and entered into a spreadsheet by Nina Lany and Sam Auger on 1/15/2020:
PRD2 <- read.csv("document_methods_comparison/prd/PRD_1956-1964.csv", stringsAsFactors=F)
PRD2$RG1 <- PRD2$RG1 * 25.4 #mm per inch conversion factor
colnames(PRD2) <- c("DAY", "RG1")
PRD2$DAY <- as.Date(PRD2$DAY, format = "%m/%d/%Y", tz = "EST")
#combine
PRD <- rbind(PRD2, PRD)
PRD$DAY<-ymd(PRD$DAY)
PRD$year<-year(PRD$DAY)
PRD$month<-month(PRD$DAY)
PRD$week<-week(PRD$DAY)
PRD$day<-day(PRD$DAY)
head(PRD)
tail(PRD)
## make PRD like tl3 below-   then plot both to see the discrepancies.
## visualize the L3data for 75-84
tl3<-read.csv("RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv")
tl3$DATE<-ymd_hms(tl3$DATE)
tl3$DAY<-as.Date(tl3$DATE)
tl3$year<-year(tl3$DATE)
tl3$month<-month(tl3$DATE)
tl3$week<-week(tl3$DATE)
tl3$day<-day(tl3$DATE)
head(tl3)
# ggplot(tl3, aes(ppt, col=as.factor(month)))+stat_ecdf(geom="step",pad=FALSE)+
#   facet_grid(year~month)
guse<-subset(tl3, year== 1970 & month ==c(11))
guse<-subset(tl3, year== 1973 & week ==c(26))
# bring PRD into guse
guse$daily<-PRD$RG1[match(guse$DAY, PRD$DAY)]
guse$d96<-guse$daily/96 # 15 min intervals in a day
p1<-ggplotly(ggplot(guse, aes(x=DATE, y=d96, group=month))+geom_point()+geom_line()+
geom_point(aes(x=DATE, y=ppt, col=year))+geom_line(aes(x=DATE, y=ppt,col=year))+
scale_x_datetime(date_breaks = "1 day") +
facet_wrap(~week, scale='free_x',ncol=1, strip.position="left")+
ylab("Precip (mm)")+ theme(axis.text.x = element_text(angle=40, vjust=.5, hjust=1)))
p1
## visualize the L3data for 75-84
tl3<-read.csv("RG1/RG1_L3_cleaned/L3_precip_15min_RG1.csv")
tl3$DATE<-ymd_hms(tl3$DATE)
tl3$DAY<-as.Date(tl3$DATE)
tl3$year<-year(tl3$DATE)
tl3$month<-month(tl3$DATE)
tl3$week<-week(tl3$DATE)
tl3$day<-day(tl3$DATE)
head(tl3)
guse<-subset(tl3, year== 1970 & month ==c(11))
guse<-subset(tl3, year== 1973 & week ==c(26))
# bring PRD into guse
guse$daily<-PRD$RG1[match(guse$DAY, PRD$DAY)]
guse$d96<-guse$daily/96 # 15 min intervals in a day
p1<-ggplotly(ggplot(guse, aes(x=DATE, y=d96, group=month))+geom_point()+geom_line()+
geom_point(aes(x=DATE, y=ppt, col=year))+geom_line(aes(x=DATE, y=ppt,col=year))+
scale_x_datetime(date_breaks = "1 day") +
facet_wrap(~week, scale='free_x',ncol=1, strip.position="left")+
ylab("Precip (mm)")+ theme(axis.text.x = element_text(angle=40, vjust=.5, hjust=1)))
p1
