precipitation$watershed[(precipitation$watershed == "W2")] <- 2
precipitation$watershed[(precipitation$watershed == "W3")] <- 3
precipitation$watershed[(precipitation$watershed == "W4")] <- 4
precipitation$watershed[(precipitation$watershed == "W5")] <- 5
precipitation$watershed[(precipitation$watershed == "W6")] <- 6
precipitation$watershed[(precipitation$watershed == "W7")] <- 7
precipitation$watershed[(precipitation$watershed == "W8")] <- 8
precipitation$watershed[(precipitation$watershed == "W9")] <- 9
temp_date <- precipitation$date
year <- substr(temp_date,1,4)
year <- as.matrix(year)
month <-  substr(temp_date,6,7)
month <- as.matrix(month)
year_month <- paste(year,month,sep="-")
year_month <- as.matrix(year_month)
# water year June 1st - May 31st
# assign water year depending if month < 6
water_year <- function(year,month)
{
tYear <- as.numeric(year)
tMon <- as.numeric(month)
WYear <- ifelse(tMon<6,tYear-1,tYear)
return (WYear)
}
wy <- water_year(year,month)
wy <- as.matrix(wy)
precipitation <- cbind(precipitation,wy)
precipitation_W1 <- subset(precipitation,(watershed==1))
precipitation_W2 <- subset(precipitation,(watershed==2))
precipitation_W3 <- subset(precipitation,(watershed==3))
precipitation_W4 <- subset(precipitation,(watershed==4))
precipitation_W5 <- subset(precipitation,(watershed==5))
precipitation_W6 <- subset(precipitation,(watershed==6))
precipitation_W7 <- subset(precipitation,(watershed==7))
precipitation_W8 <- subset(precipitation,(watershed==8))
precipitation_W9 <- subset(precipitation,(watershed==9))
precipitation_W1$watershed <- NULL
precipitation_W2$watershed <- NULL
precipitation_W3$watershed <- NULL
precipitation_W4$watershed <- NULL
precipitation_W5$watershed <- NULL
precipitation_W6$watershed <- NULL
precipitation_W7$watershed <- NULL
precipitation_W8$watershed <- NULL
precipitation_W9$watershed <- NULL
colnames(precipitation_W1) <- c("date","precip_mm_W1","wy")
colnames(precipitation_W2) <- c("date","precip_mm_W2","wy")
colnames(precipitation_W3) <- c("date","precip_mm_W3","wy")
colnames(precipitation_W4) <- c("date","precip_mm_W4","wy")
colnames(precipitation_W5) <- c("date","precip_mm_W5","wy")
colnames(precipitation_W6) <- c("date","precip_mm_W6","wy")
colnames(precipitation_W7) <- c("date","precip_mm_W7","wy")
colnames(precipitation_W8) <- c("date","precip_mm_W8","wy")
colnames(precipitation_W9) <- c("date","precip_mm_W9","wy")
WY_day_count_W1 <- count(precipitation_W1, "wy")
keep_wy_W1 <- subset(WY_day_count_W1,(freq>=365))
precipitation_W1_merge <- merge(precipitation_W1,keep_wy_W1, by = c("wy"))
precipitation_W1_merge$freq <- NULL
WY_day_count_W2 <- count(precipitation_W2, "wy")
keep_wy_W2 <- subset(WY_day_count_W2,(freq>=365))
precipitation_W2_merge <- merge(precipitation_W2,keep_wy_W2, by = c("wy"))
precipitation_W2_merge$freq <- NULL
WY_day_count_W3 <- count(precipitation_W3, "wy")
keep_wy_W3 <- subset(WY_day_count_W3,(freq>=365))
precipitation_W3_merge <- merge(precipitation_W3,keep_wy_W3, by = c("wy"))
precipitation_W3_merge$freq <- NULL
WY_day_count_W4 <- count(precipitation_W4, "wy")
keep_wy_W4 <- subset(WY_day_count_W4,(freq>=365))
precipitation_W4_merge <- merge(precipitation_W4,keep_wy_W4, by = c("wy"))
precipitation_W4_merge$freq <- NULL
WY_day_count_W5 <- count(precipitation_W5, "wy")
keep_wy_W5 <- subset(WY_day_count_W5,(freq>=365))
precipitation_W5_merge <- merge(precipitation_W5,keep_wy_W5, by = c("wy"))
precipitation_W5_merge$freq <- NULL
WY_day_count_W6 <- count(precipitation_W6, "wy")
keep_wy_W6 <- subset(WY_day_count_W6,(freq>=365))
precipitation_W6_merge <- merge(precipitation_W6,keep_wy_W6, by = c("wy"))
precipitation_W6_merge$freq <- NULL
WY_day_count_W7 <- count(precipitation_W7, "wy")
keep_wy_W7 <- subset(WY_day_count_W7,(freq>=365))
precipitation_W7_merge <- merge(precipitation_W7,keep_wy_W7, by = c("wy"))
precipitation_W7_merge$freq <- NULL
WY_day_count_W8 <- count(precipitation_W8, "wy")
keep_wy_W8 <- subset(WY_day_count_W8,(freq>=365))
precipitation_W8_merge <- merge(precipitation_W8,keep_wy_W8, by = c("wy"))
precipitation_W8_merge$freq <- NULL
WY_day_count_W9 <- count(precipitation_W9, "wy")
keep_wy_W9 <- subset(WY_day_count_W9,(freq>=365))
precipitation_W9_merge <- merge(precipitation_W9,keep_wy_W9, by = c("wy"))
precipitation_W9_merge$freq <- NULL
pre <- merge(precipitation_W1_merge,precipitation_W2_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W3_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W4_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W5_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W6_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W7_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W8_merge, by = c("date","wy"), all = TRUE)
pre <- merge(pre,precipitation_W9_merge, by = c("date","wy"), all = TRUE)
pre$date <- NULL
pre_wy <- aggregate(pre, by=list(pre$wy), FUN = sum)
pre_wy <- pre_wy[c("Group.1", "precip_mm_W3")]
colnames(pre_wy) <- c("wy","hb_pre_w3_mm")
merger <- merge(pre_wy, merge_annual, by = c("wy"), all = TRUE)
head(merger)
###############
# Re-run with merger just for 1883 to 2014
####################
#merger<-merger[merger$wy < 2015,]
hb_only <- merger[!is.na(merger$hb_pre_w3_mm), ]
hb_pre_sen <- sens.slope(hb_only$hb_pre_w3_mm, conf.level = 0.95)
hb_only$hb_pre_slp <- NA
hb_only$hb_pre_slp[1] <- median(hb_only$hb_pre_w3_mm)-
(((nrow(hb_only)-1)/2)*hb_pre_sen$estimate)
hb_only$hb_pre_slp[nrow(hb_only)] <- median(hb_only$hb_pre_w3_mm)+
(((nrow(hb_only)-1)/2)*hb_pre_sen$estimate)
hb_only$hb_pre_slp <-
c(na.approx(hb_only$hb_pre_slp))
length(hb_only$hb_pre_slp)*hb_pre_sen$estimate
regional_pre_sen <- sens.slope(hb_only$regional_pre_avg_mm, conf.level = 0.95)
regional_pre_sen
hb_only$regional_pre_slp <- NA
hb_only$regional_pre_slp[1] <- median(hb_only$regional_pre_avg_mm)-
(((nrow(hb_only)-1)/2)*regional_pre_sen$estimate)
hb_only$regional_pre_slp[nrow(hb_only)] <- median(hb_only$regional_pre_avg_mm)+
(((nrow(hb_only)-1)/2)*regional_pre_sen$estimate)
hb_only$regional_pre_slp <-
c(na.approx(hb_only$regional_pre_slp))
length(hb_only$regional_pre_slp)*regional_pre_sen$estimate
hb_only$hb_pre_w3_mm <- NULL
hb_only$regional_pre_avg_mm <- NULL
pre_trends <- merge(merger,hb_only, by = c("wy"), all = TRUE)
hb_pre_w3_yr_count <- sum(sapply(pre_trends$hb_pre_slp, function(x) sum(!is.na(x))))
hb_pre_w3_yr_count_slp_time <- hb_pre_sen$estimates * hb_pre_w3_yr_count
hb_pre_w3_sen_slp <- format(round(hb_pre_sen$estimates, digits=1), nsmall = 1)
hb_pre_w3_sen_p <- format(round(hb_pre_sen$p.value, digits=4), nsmall = 3, scientific = F)
regional_pre_yr_count <- sum(sapply(pre_trends$regional_pre_slp, function(x) sum(!is.na(x))))
regional_pre_yr_count_slp_time <- regional_pre_sen$estimates * regional_pre_yr_count
regional_pre_sen_slp <- format(round(regional_pre_sen$estimates, digits=1), nsmall =1)
regional_pre_sen_p <- format(round(regional_pre_sen$p.value, digits=4), nsmall = 3, scientific = F)
maxval <- max(c(pre_trends$hb_pre_w3_mm, pre_trends$regional_pre_avg_mm), na.rm=TRUE)
minval <- min(c(pre_trends$hb_pre_w3_mm, pre_trends$regional_pre_avg_mm), na.rm=TRUE)
maxwy <- max(c(hb_only$wy), na.rm=TRUE)
library("zoo")
library("ggpmisc")
head(pre_trends)
precipit <- ggplot() +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_w3_mm), colour="gold3", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_slp), linetype = "dashed", colour="gold3", lwd=0.6) + xlab("")+
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_avg_mm), colour="blue", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_slp), linetype = "dashed", colour="blue", lwd=0.6) + xlab("")+
ylab("Precipitation (mm)")+
geom_smooth(method="lm", se="F")+
theme_bw()+
scale_x_continuous(limits = c(1890,(ceiling((maxwy-10)/20)*20)+10), expand = c(0,0), breaks = seq(1890,(ceiling((maxwy-10)/20)*20)+10, by = 20)) +
scale_y_continuous(limits = c((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100), expand = c(0,0),breaks = seq((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100, by = 200)) +
theme(plot.title = element_text(size = 20, face = "bold", hjus=0.04, vjus=-9),
plot.background = element_rect(fill = "transparent"),
plot.margin = unit(c(3,7,-3,1), "mm"),
axis.ticks = element_line(colour = "black", size = 0.5),
axis.ticks.length=unit(.25, "cm"),
axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=16, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x=element_text(size=16, colour = "black", margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1, linetype="solid"),
panel.background = element_rect(fill = "transparent",colour = NA)
) +
geom_text(aes(x=1955, y=2000, label = paste0("Hubbard Brook, NH has increased ",hb_pre_w3_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",hb_pre_w3_sen_p)), size = 8, color="gold3") +
geom_text(aes(x=1955, y=1900, label = paste0("Regional average has increased ",regional_pre_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",regional_pre_sen_p)), size = 8, color="blue") +
xlab("Water Year (June 1)")
precipit
#
# dpi=200
# png("my_plot_50.png", width=12*dpi, height=7*dpi, res=dpi)
# precipit
# dev.off()
getwd()
getwd()
pc<-ggplotly(precipit)
pc
htmlwidgets::saveWidget(as_widget(pc), "climateChange/regional_and_HB_precip.html")
precipit <- ggplot() +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_w3_mm), colour="gold3", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_slp), linetype = "dashed", colour="gold3", lwd=0.6) + xlab("")+
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_avg_mm), colour="blue", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_slp), linetype = "dashed", colour="blue", lwd=0.6) + xlab("")+
ylab("Precipitation (mm)")+
geom_smooth(method="lm", se="F")+
theme_bw()+
scale_x_continuous(limits = c(1890,(ceiling((maxwy-10)/20)*20)+10), expand = c(0,0), breaks = seq(1890,(ceiling((maxwy-10)/20)*20)+10, by = 20)) +
scale_y_continuous(limits = c((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100), expand = c(0,0),breaks = seq((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100, by = 200)) +
theme(plot.title = element_text(size = 20, face = "bold", hjus=0.04, vjus=-9),
plot.background = element_rect(fill = "transparent"),
plot.margin = unit(c(3,7,-3,1), "mm"),
axis.ticks = element_line(colour = "black", size = 0.5),
axis.ticks.length=unit(.25, "cm"),
axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=16, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x=element_text(size=16, colour = "black", margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1, linetype="solid"),
panel.background = element_rect(fill = "transparent",colour = NA)
) +
geom_text(aes(x=1960, y=2000, label = paste0("Hubbard Brook, NH has increased ",hb_pre_w3_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",hb_pre_w3_sen_p)), size = 8, color="gold3") +
geom_text(aes(x=1960, y=1900, label = paste0("Regional average has increased ",regional_pre_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",regional_pre_sen_p)), size = 8, color="blue") +
xlab("Water Year (June 1)")
precipit
pc<-ggplotly(precipit)
pc
htmlwidgets::saveWidget(as_widget(pc), "climateChange/regional_and_HB_precip.html")
precipit <- ggplot() +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_w3_mm), colour="gold3", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_slp), linetype = "dashed", colour="gold3", lwd=0.6) + xlab("")+
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_avg_mm), colour="blue", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_slp), linetype = "dashed", colour="blue", lwd=0.6) + xlab("")+
ylab("Precipitation (mm)")+
geom_smooth(method="lm", se="F")+
theme_bw()+
scale_x_continuous(limits = c(1890,(ceiling((maxwy-10)/20)*20)+10), expand = c(0,0), breaks = seq(1890,(ceiling((maxwy-10)/20)*20)+10, by = 20)) +
scale_y_continuous(limits = c((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100), expand = c(0,0),breaks = seq((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100, by = 200)) +
theme(plot.title = element_text(size = 20, face = "bold", hjus=0.04, vjus=-9),
plot.background = element_rect(fill = "transparent"),
plot.margin = unit(c(3,7,-3,1), "mm"),
axis.ticks = element_line(colour = "black", size = 0.5),
axis.ticks.length=unit(.25, "cm"),
axis.text.y=element_text(size=11, colour = "black"),
axis.title.y=element_text(size=14, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x=element_text(size=14, colour = "black", margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.x=element_text(size=11, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1, linetype="solid"),
panel.background = element_rect(fill = "transparent",colour = NA)
) +
geom_text(aes(x=1960, y=2000, label = paste0("Hubbard Brook, NH has increased ",hb_pre_w3_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",hb_pre_w3_sen_p)), size = 8, color="gold3") +
geom_text(aes(x=1960, y=1900, label = paste0("Regional average has increased ",regional_pre_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",regional_pre_sen_p)), size = 8, color="blue") +
xlab("Water Year (June 11)")
precipit
pc<-ggplotly(precipit)
pc
precipit <- ggplot() +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_w3_mm), colour="gold3", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_slp), linetype = "dashed", colour="gold3", lwd=0.6) + xlab("")+
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_avg_mm), colour="blue", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_slp), linetype = "dashed", colour="blue", lwd=0.6) + xlab("")+
ylab("Precipitation (mm)")+
geom_smooth(method="lm", se="F")+
theme_bw()+
scale_x_continuous(limits = c(1890,(ceiling((maxwy-10)/20)*20)+10), expand = c(0,0), breaks = seq(1890,(ceiling((maxwy-10)/20)*20)+10, by = 20)) +
scale_y_continuous(limits = c((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100), expand = c(0,0),breaks = seq((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100, by = 200)) +
theme(plot.title = element_text(size = 20, face = "bold", hjus=0.04, vjus=-9),
plot.background = element_rect(fill = "transparent"),
plot.margin = unit(c(3,7,-3,1), "mm"),
axis.ticks = element_line(colour = "black", size = 0.5),
axis.ticks.length=unit(.25, "cm"),
axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=20, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x=element_text(size=20, colour = "black", margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1, linetype="solid"),
panel.background = element_rect(fill = "transparent",colour = NA)
) +
geom_text(aes(x=1960, y=2000, label = paste0("Hubbard Brook, NH has increased ",hb_pre_w3_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",hb_pre_w3_sen_p)), size = 5, color="gold3") +
geom_text(aes(x=1960, y=1900, label = paste0("Regional average has increased ",regional_pre_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",regional_pre_sen_p)), size = 5, color="blue") +
xlab("Water Year (June 1)")
precipit
getwd()
pc<-ggplotly(precipit)
pc
htmlwidgets::saveWidget(as_widget(pc), "climateChange/regional_and_HB_precip.html")
precipit <- ggplot() +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_w3_mm), colour="gold3", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= hb_pre_slp), linetype = "dashed", colour="gold3", lwd=0.6) + xlab("")+
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_avg_mm), colour="blue", lwd=0.6) +
geom_line(data = pre_trends,aes(x = wy, y= regional_pre_slp), linetype = "dashed", colour="blue", lwd=0.6) + xlab("")+
ylab("Precipitation (mm)")+
geom_smooth(method="lm", se="F")+
theme_bw()+
scale_x_continuous(limits = c(1890,(ceiling((maxwy-10)/20)*20)+10), expand = c(0,0), breaks = seq(1890,(ceiling((maxwy-10)/20)*20)+10, by = 20)) +
scale_y_continuous(limits = c((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100), expand = c(0,0),breaks = seq((floor(minval/200)*200)-100,(ceiling(maxval/200)*200)+100, by = 200)) +
theme(plot.title = element_text(size = 20, face = "bold", hjus=0.04, vjus=-9),
plot.background = element_rect(fill = "transparent"),
plot.margin = unit(c(3,7,-3,1), "mm"),
axis.ticks = element_line(colour = "black", size = 0.5),
axis.ticks.length=unit(.25, "cm"),
axis.text.y=element_text(size=15, colour = "black"),
axis.title.y=element_text(size=20, colour = "black", margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x=element_text(size=20, colour = "black", margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.x=element_text(size=15, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1, linetype="solid"),
panel.background = element_rect(fill = "transparent",colour = NA)
) +
geom_text(aes(x=1960, y=2000, label = paste0("Hubbard Brook, NH has increased ",hb_pre_w3_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",hb_pre_w3_sen_p)), size = 6, color="gold3") +
geom_text(aes(x=1960, y=1900, label = paste0("Regional average has increased ",regional_pre_sen_slp, " mm/yr (",hb_pre_w3_yr_count," years); p = ",regional_pre_sen_p)), size = 6, color="blue") +
xlab("Water Year (June 1)")
precipit
getwd()
pc<-ggplotly(precipit)
pc
htmlwidgets::saveWidget(as_widget(pc), "climateChange/regional_and_HB_precip.html")
##
##
## Microbial Biomass C
##    Alex Young 7/5/2022
library(ggplot2) # graphing
library(tidyr) # dataframe manipulation
library(lubridate) # for handling date times
library(plotly) # making interactive graphs
# Package ID: knb-lter-hbr.67.23 Cataloging System:https://pasta.edirepository.org.
# Data set title: Long-term measurements of microbial biomass and activity at the Hubbard Brook Experimental Forest 1994 â present.
inUrl1  <- "https://pasta.lternet.edu/package/data/eml/knb-lter-hbr/67/23/e37c133ebf3f4ac6c1f8c2f7e612ea86"
infile1 <- tempfile()
try(download.file(inUrl1,infile1,method="curl"))
if (is.na(file.size(infile1))) download.file(inUrl1,infile1,method="auto")
dt1 <-read.csv(infile1,header=F
,skip=1
,sep=","
,quot='"'
, col.names=c(
"Project",
"Date",
"Year",
"Se",
"Treatment",
"El",
"Plot",
"Hor",
"BIOC",
"RESPC",
"BION",
"NO3",
"NH4",
"NIT",
"MIN",
"DEA",
"H2O",
"pH"    ), check.names=TRUE)
unlink(infile1)
# Fix any interval or ratio columns mistakenly read in as nominal and nominal columns read as numeric or dates read as strings
if (class(dt1$Project)!="factor") dt1$Project<- as.factor(dt1$Project)
# attempting to convert dt1$Date dateTime string to R date structure (date or POSIXct)
tmpDateFormat<-"%Y-%m-%d"
tmp1Date<-as.Date(dt1$Date,format=tmpDateFormat)
# Keep the new dates only if they all converted correctly
if(length(tmp1Date) == length(tmp1Date[!is.na(tmp1Date)])){dt1$Date <- tmp1Date } else {print("Date conversion failed for dt1$Date. Please inspect the data and do the date conversion yourself.")}
rm(tmpDateFormat,tmp1Date)
if (class(dt1$Se)!="factor") dt1$Se<- as.factor(dt1$Se)
if (class(dt1$Treatment)!="factor") dt1$Treatment<- as.factor(dt1$Treatment)
if (class(dt1$El)!="factor") dt1$El<- as.factor(dt1$El)
if (class(dt1$Plot)!="factor") dt1$Plot<- as.factor(dt1$Plot)
if (class(dt1$Hor)!="factor") dt1$Hor<- as.factor(dt1$Hor)
if (class(dt1$BIOC)=="factor") dt1$BIOC <-as.numeric(levels(dt1$BIOC))[as.integer(dt1$BIOC) ]
if (class(dt1$BIOC)=="character") dt1$BIOC <-as.numeric(dt1$BIOC)
if (class(dt1$RESPC)=="factor") dt1$RESPC <-as.numeric(levels(dt1$RESPC))[as.integer(dt1$RESPC) ]
if (class(dt1$RESPC)=="character") dt1$RESPC <-as.numeric(dt1$RESPC)
if (class(dt1$BION)=="factor") dt1$BION <-as.numeric(levels(dt1$BION))[as.integer(dt1$BION) ]
if (class(dt1$BION)=="character") dt1$BION <-as.numeric(dt1$BION)
if (class(dt1$NO3)=="factor") dt1$NO3 <-as.numeric(levels(dt1$NO3))[as.integer(dt1$NO3) ]
if (class(dt1$NO3)=="character") dt1$NO3 <-as.numeric(dt1$NO3)
if (class(dt1$NH4)=="factor") dt1$NH4 <-as.numeric(levels(dt1$NH4))[as.integer(dt1$NH4) ]
if (class(dt1$NH4)=="character") dt1$NH4 <-as.numeric(dt1$NH4)
if (class(dt1$NIT)=="factor") dt1$NIT <-as.numeric(levels(dt1$NIT))[as.integer(dt1$NIT) ]
if (class(dt1$NIT)=="character") dt1$NIT <-as.numeric(dt1$NIT)
if (class(dt1$MIN)=="factor") dt1$MIN <-as.numeric(levels(dt1$MIN))[as.integer(dt1$MIN) ]
if (class(dt1$MIN)=="character") dt1$MIN <-as.numeric(dt1$MIN)
if (class(dt1$DEA)=="factor") dt1$DEA <-as.numeric(levels(dt1$DEA))[as.integer(dt1$DEA) ]
if (class(dt1$DEA)=="character") dt1$DEA <-as.numeric(dt1$DEA)
if (class(dt1$H2O)=="factor") dt1$H2O <-as.numeric(levels(dt1$H2O))[as.integer(dt1$H2O) ]
if (class(dt1$H2O)=="character") dt1$H2O <-as.numeric(dt1$H2O)
if (class(dt1$pH)=="factor") dt1$pH <-as.numeric(levels(dt1$pH))[as.integer(dt1$pH) ]
if (class(dt1$pH)=="character") dt1$pH <-as.numeric(dt1$pH)
# Convert Missing Values to NA for non-dates
dt1$BIOC <- ifelse((trimws(as.character(dt1$BIOC))==trimws("-9999.99")),NA,dt1$BIOC)
suppressWarnings(dt1$BIOC <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$BIOC))==as.character(as.numeric("-9999.99"))),NA,dt1$BIOC))
dt1$RESPC <- ifelse((trimws(as.character(dt1$RESPC))==trimws("-9999.99")),NA,dt1$RESPC)
suppressWarnings(dt1$RESPC <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$RESPC))==as.character(as.numeric("-9999.99"))),NA,dt1$RESPC))
dt1$BION <- ifelse((trimws(as.character(dt1$BION))==trimws("-9999.99")),NA,dt1$BION)
suppressWarnings(dt1$BION <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$BION))==as.character(as.numeric("-9999.99"))),NA,dt1$BION))
dt1$NO3 <- ifelse((trimws(as.character(dt1$NO3))==trimws("-9999.99")),NA,dt1$NO3)
suppressWarnings(dt1$NO3 <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$NO3))==as.character(as.numeric("-9999.99"))),NA,dt1$NO3))
dt1$NH4 <- ifelse((trimws(as.character(dt1$NH4))==trimws("-9999.99")),NA,dt1$NH4)
suppressWarnings(dt1$NH4 <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$NH4))==as.character(as.numeric("-9999.99"))),NA,dt1$NH4))
dt1$NIT <- ifelse((trimws(as.character(dt1$NIT))==trimws("-9999.99")),NA,dt1$NIT)
suppressWarnings(dt1$NIT <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$NIT))==as.character(as.numeric("-9999.99"))),NA,dt1$NIT))
dt1$MIN <- ifelse((trimws(as.character(dt1$MIN))==trimws("-9999.99")),NA,dt1$MIN)
suppressWarnings(dt1$MIN <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$MIN))==as.character(as.numeric("-9999.99"))),NA,dt1$MIN))
dt1$DEA <- ifelse((trimws(as.character(dt1$DEA))==trimws("-9999.99")),NA,dt1$DEA)
suppressWarnings(dt1$DEA <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$DEA))==as.character(as.numeric("-9999.99"))),NA,dt1$DEA))
dt1$H2O <- ifelse((trimws(as.character(dt1$H2O))==trimws("-9999.99")),NA,dt1$H2O)
suppressWarnings(dt1$H2O <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$H2O))==as.character(as.numeric("-9999.99"))),NA,dt1$H2O))
dt1$pH <- ifelse((trimws(as.character(dt1$pH))==trimws("-9999.99")),NA,dt1$pH)
suppressWarnings(dt1$pH <- ifelse(!is.na(as.numeric("-9999.99")) & (trimws(as.character(dt1$pH))==as.character(as.numeric("-9999.99"))),NA,dt1$pH))
#####
head(dt1)
table(dt1$Treatment)
table(dt1$Hor)
## add names for elevations
dt1[dt1$El=="U", "Elevation"]<-"Upper"
dt1[dt1$El=="SF", "Elevation"]<-"Spruce Fir"
dt1[dt1$El=="H", "Elevation"]<-"High"
dt1[dt1$El=="M", "Elevation"]<-"Mid"
dt1[dt1$El=="L", "Elevation"]<-"Low"
table(dt1$Elevation)
table(dt1$s)
dt1[dt1$Se=="F", "Season"]<-"Fall"
dt1[dt1$Se=="W", "Season"]<-"Winter"
dt1[dt1$Se=="SP", "Season"]<-"Spring"
dt1[dt1$Se=="SU", "Season"]<-"Summer"
table(dt1$Season)
dt1[dt1$Hor=="Oi/Oe", "Horizon"]<-"Oie"
dt1[dt1$Hor=="Oa/A", "Horizon"]<-"Oa"
dt1[dt1$Hor=="Min", "Horizon"]<-"Mineral"
# now factor in the right order
dt1$Elevation<-factor(dt1$Elevation, levels=c("Low","Mid","High","Spruce Fir","Upper"))
dt1$Horizon<-factor(dt1$Horizon, levels=c("Oie","Oa", "Mineral"))
######################
## to get correct annual values, only use the low, mid, high, and spruce/fir.
## only use samples from July
## only use samples from Bear brook
##########  annual averages, then graph
#  4 zones-   low, mid, high, spruce fir. only summers. only Bear brook
July<-dt1[dt1$Season=="Summer",]
uj<-July[!July$Elevation=="Upper",]
buj<-uj[uj$Treatment=="BearBrook",]
##########
biocav<-aggregate(list(BIOC=buj$BIOC), by=list(Year=buj$Year, Horizon=buj$Horizon), FUN="mean", na.rm=T)
microC<-ggplot(biocav, aes(x=Year, y=BIOC, col=Horizon))+
geom_point()+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(col='Soil horizon')+
scale_color_manual(values=c("deepskyblue2","orange","grey"))+
ylab("Microbial biomass C (mg/kg)")+guides(col="none")
microC
picroC<-ggplotly(microC)
picroC
htmlwidgets::saveWidget(as_widget(picroC), "soilBiology/f1_micro_biomass_C.html")
####  Average to the year level Biomass N
bionav<-aggregate(list(BION=buj$BION), by=list(Year=buj$Year, Horizon=buj$Horizon), FUN="mean", na.rm=T)
head(bionav)
microN<-ggplot(bionav, aes(x=Year, y=BION, col=Horizon))+
geom_point()+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(col='Soil horizon')+
scale_color_manual(values=c("deepskyblue2","orange","grey"))+
ylab("Microbial biomass N (mg/kg)")+guides(col="none")+guides(col="none")
picroN<-ggplotly(microN)
picroN
htmlwidgets::saveWidget(as_widget(picroN), "soilBiology/f2_micro_biomass_N.html")
####  Average to the year level bioC to N
biocav$horyear<-paste(biocav$Horizon, biocav$Year)
bionav$horyear<-paste(bionav$Horizon, bionav$Year)
biocav$BION<-bionav$BION[match(biocav$horyear, bionav$horyear)]
##
biocav$CN<-biocav$BIOC / biocav$BION
microCN<-ggplot(biocav, aes(x=Year, y=CN, col=Horizon))+
geom_point()+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(col='Soil horizon')+
scale_color_manual(values=c("deepskyblue2","orange","grey"))+
ylab("Microbial biomass C:N")+guides(col="none")
microCN
picroCN<-ggplotly(microCN)
picroCN
htmlwidgets::saveWidget(as_widget(picroCN), "soilBiology/f3_micro_CN.html")
####  Average to the year level soil respiration
respav<-aggregate(list(Resp=buj$RESPC), by=list(Year=buj$Year, Horizon=buj$Horizon), FUN="mean", na.rm=T)
head(respav)
microresp<-ggplot(respav, aes(x=Year, y=Resp, col=Horizon))+
geom_point()+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(col='Soil horizon')+
scale_color_manual(values=c("deepskyblue2","orange","grey"))+
ylab("Respiration (mg/kg/day)")+guides(col="none")
microresp
picroresp<-ggplotly(microresp)
picroresp
htmlwidgets::saveWidget(as_widget(picroresp), "soilBiology/f4_micro_respiration.html")
####  Average to the year level, denitrigication potential
respdea<-aggregate(list(DEA=buj$DEA), by=list(Year=buj$Year, Horizon=buj$Horizon), FUN="mean", na.rm=T)
microdea<-ggplot(respdea, aes(x=Year, y=DEA, col=Horizon))+
geom_point()+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(col='Soil horizon')+
scale_color_manual(values=c("deepskyblue2","orange","grey"))+
ylab("Denitrification potential (mg/kg/day)")+guides(col="none")
microdea
picrodea<-ggplotly(microdea)
picrodea
htmlwidgets::saveWidget(as_widget(picrodea), "soilBiology/f5_micro_Denitrification.html")
####  Average to the year level, DEA-BIOC
head(respdea)
respdea$horyear<-paste(respdea$Horizon, respdea$Year)
biocav$dea<-respdea$DEA[match(biocav$horyear, respdea$horyear)]
biocav$deabioc<-biocav$dea/biocav$BIOC
head(buj)
microdeabioc<-ggplot(biocav, aes(x=Year, y=deabioc, col=Horizon))+
geom_point()+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(col='Soil horizon')+
scale_color_manual(values=c("deepskyblue2","orange","grey"))+
ylab("DEA : BIOC")+guides(col="none")
picrodeabioc<-ggplotly(microdeabioc)
picrodeabioc
htmlwidgets::saveWidget(as_widget(picrodeabioc), "soilBiology/f6_denitrification_biomass_C.html")
