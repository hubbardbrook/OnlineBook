table(om$Horizon, om$Watershed)
table(om$Year, om$Watershed)
g1<-ggplot(om, aes(x=Year, y=OM_OM, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)
g1
table(om$Year, om$Watershed)
fom<-subset(om, Horizon == c("Oa","Oie"))
table(fom$Horizon)
yom<-aggregate(fom$OM_OM, by=list(Year=fom$Year, Watershed=fom$Watershed, Horizon=fom$Horizon), FUN="mean", na.rm=T)
g2<-ggplot(yom, aes(x=Year, y=x, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
scale_color_manual(values=c("green","black"))+geom_line()
g2
ggarrange(g1, g2, nrow=2)
yom<-aggregate(fom$OM_OM, by=list(Year=fom$Year, Watershed=fom$Watershed, Horizon=fom$Horizon), FUN="mean")
yom
yom<-aggregate(fom$OM_OM, by=list(Year=fom$Year, Watershed=fom$Watershed, Horizon=fom$Horizon), FUN="mean", na.rm=T)
yom
str(om)
library(lubridate)
om$Year<-as.date(om$Year)
om$Year<-as.Date(om$Year)
om$Year<-date(om$Year)
om$Year<-year(om$Year)
table(fom$Horizon)
table(fom$Horizon, fom$Year)
table(fom$Horizon, fom$Watershed)
fom<-subset(om, Horizon != c("min","Min","Oie+a"))
table(fom$Horizon, fom$Watershed)
table(om$Year, om$Watershed)
head(w1)
head(dt1)
yom<-aggregate(list(OM=fom$OM_OM), by=list(Year=fom$Year, Watershed=fom$Watershed, Horizon=fom$Horizon), FUN="mean", na.rm=T)
yom
g2<-ggplot(yom, aes(x=Year, y=x, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
scale_color_manual(values=c("green","black"))+geom_line()
g2
g2<-ggplot(yom, aes(x=Year, y=OM, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
scale_color_manual(values=c("green","black"))+geom_line()
g2
oa<-om[om$Horizon=="Oa",]
oie<-om[om$Horizon=="Oie",]
fom<-rbind(oa, oie)
table(fom$Horizon, fom$Watershed)
yom<-aggregate(list(OM=fom$OM_OM), by=list(Year=fom$Year, Watershed=fom$Watershed, Horizon=fom$Horizon), FUN="mean", na.rm=T)
yom
g2<-ggplot(yom, aes(x=Year, y=OM, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
scale_color_manual(values=c("green","black"))+geom_line()
g2
yom$Watershed<-factor(yom$Watershed, levels=c(6,1))
g2<-ggplot(yom, aes(x=Year, y=OM, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
scale_color_manual(values=c("green","black"))+geom_line()
g2
yom$Horizon<-factor(yom$Horizon, levels=c("Oie","Oa"))
g2<-ggplot(yom, aes(x=Year, y=OM, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
scale_color_manual(values=c("black","green"))+geom_line()
g2
library(plotly)
ggplotly(g2)
g2<-ggplot(yom, aes(x=Year, y=OM, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
scale_color_manual(values=c("black","green"))+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
g2
# calculate SE
st.err <- function(x, na.rm=FALSE) {
if(na.rm==TRUE) x <- na.omit(x)
sd(x)/sqrt(length(x))}
yse<-aggregate(list(OMSE=fom$OM_OM), by=list(Year=fom$Year, Watershed=fom$Watershed, Horizon=fom$Horizon), FUN=st.err)
yse
sd(x, na.rm=T)/sqrt(length(x))}
# calculate SE
st.err <- function(x, na.rm=FALSE) {
if(na.rm==TRUE) x <- na.omit(x)
sd(x, na.rm=T)/sqrt(length(x))}
yse<-aggregate(list(OMSE=fom$OM_OM), by=list(Year=fom$Year, Watershed=fom$Watershed, Horizon=fom$Horizon), FUN=st.err)
yse
# add in se
dim(yom)
# add in se to yom
yom$se<-yse$OMSE
# just plot the 2 horizons
yom$Watershed<-factor(yom$Watershed, levels=c(6,1))
yom$Horizon<-factor(yom$Horizon, levels=c("Oie","Oa"))
g2<-ggplot(yom, aes(x=Year, y=OM, col=Watershed))+geom_point()+
ylab("Organic matter (kg/m2)")+facet_wrap(~Horizon)+
geom_errorbar(aes(ymin=OM-se, ymax=OM+se))+
scale_color_manual(values=c("black","green"))+geom_line()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
g2
p2<-ggplotly(g2)
htmlwidgets::saveWidget(as_widget(p2), "decompCarbon/Fig5_organicMatter.html")
## Alex Y visualizing the gaps, dups, and other QA tasks
library(plotly)
library(lubridate)
library(ggplot2)
#set working directory so it works on both windows and unix OS:
path <- "~/../../Box/External-HBEF-DATA/precip_charts_digitize"
if( .Platform$OS.type == "unix" )
path <- "~/Box/External-HBEF-DATA/precip_charts_digitize"
path<-"C:\\Users\\bears\\Box\\precip_charts_digitize" # Alex Y's path
setwd(path)
#read in trace catalog
tracat<-read.csv("RG1/TraceCatalog_RG1.csv")
head(tracat)
dup_charts<-as.data.frame(table(tracat$Trace.ID))
table(dup_charts$Freq)
dup_charts[dup_charts$Freq==2,] # this will show any duplicated trace chart
tracat$trace<-sub('.......', '', tracat$Trace.ID)
dup_dates<-as.data.frame(table(tracat$Trace.Start.Date, tracat$trace))
head(dup_dates)
table(dup_dates$Freq)
dup_dates[dup_dates$Freq>1,]
#read in chart catalog
chacat<-read.csv("RG1/ChartCatalog_RG1.csv")
head(chacat)
dup_charts<-as.data.frame(table(chacat$Image.ID))
table(dup_charts$Freq)
dup_charts[dup_charts$Freq>1,]
###############
## read in gaps for RG1
gap<-read.csv("RG1/scripts/RG1_gaps.csv")
gap$year<-year(gap$DATE)
gap$Month<-month(gap$DATE)
gp<-as.data.frame(table(gap$year, gap$Month)) # dataframe for graphing
gp$Month<-gp$Var2
n1<-ggplot(gp, aes(x=Var1, y=Freq/96, fill=Month))+geom_bar(stat="identity", position="stack", col="black")+
xlab("Calendar year")+ylab("Number of gaps (days)")+theme(axis.text.x = element_text(angle = 90,vjust = .5))
n1
## read in duplitcates for RG1
dup<-read.csv("RG1/scripts/RG1_dups.csv")
dup$year<-year(dup$DATE)
dup$Month<-month(dup$DATE)
dp<-as.data.frame(table(dup$year, dup$Month))
dp$Month<-dp$Var2
dp
str(dp)
dp$Var1<-as.numeric(as.character(dp$Var1))
n2<-ggplot(dp, aes(x=Var1, y=Freq, fill=Month))+geom_bar(stat="identity", position="stack", col="black")+
xlab("Calendar year")+ylab("Number of 15 minute duplicates")+theme(axis.text.x = element_text(angle = 90,vjust = .5))+
scale_x_continuous(limits=c(1957,2011),breaks=seq(1957,2011,1))
n2
library(ggpubr)
ggarrange(n1,n2, common.legend=T, nrow=2, legend="bottom")
###########################################################
#      QAQC graphs by time period (weeks)
#####################
#read in daily totals 1965-2011 read by hand from the charts (obtained digital PRD files from Amey)
PRD <- read.csv("document_methods_comparison/prd/PRD_1965-2011.csv", stringsAsFactors=F)
PRD$DAY <- as.Date(PRD$DAY, tz = "EST")
PRD <- PRD[,c("DAY", "RG1")]
#read in daily totals for RG1 1956 - 1964 read by hand off the charts (in inches) and entered into a spreadsheet by Nina Lany and Sam Auger on 1/15/2020:
PRD2 <- read.csv("document_methods_comparison/prd/PRD_1956-1964.csv", stringsAsFactors=F)
PRD2$RG1 <- PRD2$RG1 * 25.4 #mm per inch conversion factor
colnames(PRD2) <- c("DAY", "RG1")
PRD2$DAY <- as.Date(PRD2$DAY, format = "%m/%d/%Y", tz = "EST")
#combine
PRD <- rbind(PRD2, PRD)
PRD$DAY<-ymd(PRD$DAY)
PRD$year<-year(PRD$DAY)
PRD$month<-month(PRD$DAY)
PRD$week<-week(PRD$DAY)
PRD$day<-day(PRD$DAY)
head(PRD)
tail(PRD)
cumsum(PRD$RG1[PRD$year=="1962",])
cumsum(PRD$RG1[PRD$year=="1962"])
library(plyr)
library(iris)
iris<- ddply(PRD, .(year), summarize,
rain= unique(PRD),
ecdf = ecdf(PRD)(unique(PRD)))
head(PRD)
iris<- ddply(PRD, .(year), summarize,
rain= unique(RG1),
ecdf = ecdf(RG1)(unique(RG1)))
iris
ggpot(iris, aes(x=rain, y=ecdf, col=year))+
geom_point()+geom_line()
ggplot(iris, aes(x=rain, y=ecdf, col=year))+
geom_point()+geom_line()
ggplot(iris, aes(x=rain, y=ecdf, col=year, group=year))+
geom_point()+geom_line()
round(iris$year, -1)
iris$decade<-round(iris$year, -1)
ggplot(iris, aes(x=rain, y=ecdf, col=year, group=year))+
geom_point()+geom_line()+facet_wrap(~decade, nrow=1)
ggplot(iris, aes(x=rain, y=ecdf, col=decade, group=year))+
geom_point()+geom_line()
ggplot(iris, aes(x=rain, y=ecdf, col=decade, group=year))+
geom_point()+geom_line()+geom_smooth()
ggplot(iris, aes(x=rain, y=ecdf, col=as.factor(decade), group=year))+
geom_point()+geom_line()+geom_smooth()
ggplot(iris, aes(x=rain, y=ecdf, col=as.factor(decade), group=year))+
geom_smooth()
ggplot(iris, aes(x=rain, y=ecdf, col=as.factor(decade), group=year))+
geom_smooth(group=decade)
ggplot(iris, aes(x=rain, y=ecdf, col=as.factor(decade), group=year))+
geom_smooth(aes(group=decade))
ggplot(iris, aes(x=rain, y=ecdf, col=(decade), group=year))+
geom_smooth(aes(group=decade))
aggregate(PRD$RG1, by=list(year=PRD$year), FUN="median", na.rm=T)
table(PRD$RG1, PRD$year)
table(PRD$RG1==0, PRD$year)
fr<-as.data.frame(table(PRD$RG1==0, PRD$year))
head(fr)
fr$True0<-fr$Var1
ggplot(fr, aes(x=Var2, y=Freq, fill=True0))+geom_bar(stat="identity",position="position_dodge")
ggplot(fr, aes(x=Var2, y=Freq, fill=True0))+geom_bar(stat="identity",position=position_dodge())
ggplot(fr, aes(x=Var2, y=Freq, fill=True0))+geom_bar(stat="identity",position="stack"
ggplot(fr, aes(x=Var2, y=Freq, fill=True0))+geom_bar(stat="identity",position="stack")
ggplot(fr, aes(x=Var2, y=Freq, fill=True0))+geom_bar(stat="identity",position="stack")
summary(PRD$RG1)
breaks = seq(0, 140, by=5)
m.lt.cut = cut(PRD$RG1, breaks, right=TRUE)
m.lt.cum = as.data.frame(c(0, cumsum(table(m.lt.cut))))
m.lt.cum$rownames<-rownames(m.lt.cum)
m.lt.cum<-m.lt.cum[-1,]
m.lt.cum$Type<-"year"
m.lt.cum$Value<-m.lt.cum$`c(0, cumsum(table(m.lt.cut)))`
m.lt.cum
m.lt.cum$prop<-m.lt.cum$Value/max(m.lt.cum$Value)
table(iris$decade)
PRD$decade<-round(PRD$year, -1)
i<-1960
m.lt.cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
m.lt.cum = as.data.frame(c(0, cumsum(table(m.lt.cut))))
m.lt.cum$rownames<-rownames(m.lt.cum)
m.lt.cum<-m.lt.cum[-1,]
m.lt.cum$Type<-"year"
m.lt.cum$Value<-m.lt.cum$`c(0, cumsum(table(m.lt.cut)))`
m.lt.cum$prop<-m.lt.cum$Value/max(m.lt.cum$Value)
m.lt.cum$Type<-i
m.lt.cum$Value<-m.lt.cum$`c(0, cumsum(table(m.lt.cut)))`
m.lt.cum$prop<-m.lt.cum$Value/max(m.lt.cum$Value)
head(m.lt.cum)
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
rg<-cbind(rg1cum)
i<-1970
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
rg<-cbind(rg, rg1cum)
table(rg$decade)
head(rg1cum)
rg<-cbind(rg, rg1cum)
table(rg$decade)
i<-1960
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
d60<-rg1cum
i<-1970
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
d70<-rg1cum
i<-1980
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
d80<-rg1cum
i<-1990
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
d90<-rg1cum
table(PRD$decade)
i<-2000
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
d00<-rg1cum
table(PRD$decade)
i<-2010
rg1cut = cut(PRD$RG1[PRD$decade==i], breaks, right=TRUE)
rg1cum = as.data.frame(c(0, cumsum(table(rg1cut))))
rg1cum$rownames<-rownames(rg1cum)
rg1cum<-rg1cum[-1,]
rg1cum$decade<-i
rg1cum$Value<-rg1cum$`c(0, cumsum(table(rg1cut)))`
rg1cum$prop<-rg1cum$Value/max(rg1cum$Value)
head(rg1cum)
d10<-rg1cum
rg<-cbind(d60,d70,d80,d90,d00,d10)
table(rg$decade)
rg<-rbind(d60,d70,d80,d90,d00,d10)
table(rg$decade)
breaks
head(rg)
rep(breaks, 28)
rg$break<-rep(breaks, 28)
rg$precip<-rep(breaks, 28)
rg$precip<-rep(breaks[-1], 28)
dim(rg)
table(rg$decade)
length(breaks)
length(breaks[-1])
rg$precip<-rep(breaks[-1], 5)
rg$precip<-rep(breaks, 5)
head(rg)
breaks
rg$precip<-seq(2.5,142.5, 5 )
rg$precip<-rep(seq(2.5,142.5, 5), 6)
table(rg$decade)
rep(seq(2.5,142.5, 5), 6)
rep(seq(2.5,147.5, 5), 6)
dim(rg)
rep(seq(2.5,147.5, 5), 6)
rep(seq(2.5,147.5, 5), 5)
table(rg$decade, rg$rownames)
dim(rg)
head(rg, 15)
head(rg, 29)
rep(seq(2.5,137.5, 5), 5)
rep(seq(2.5,137.5, 5), 6)
rg$precip<-rep(seq(2.5,137.5, 5), 6)
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade))+geom_line(lwd=2, aes(linetype=decade))+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
rg$decade<-as.factor(rg$decade)
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade))+geom_line(lwd=2, aes(linetype=decade))+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade))+geom_line(lwd=2, aes(linetype=decade))+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_fill_gradient(low="blue",high="red")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
rg<-rbind(d60,d70,d80,d90,d00,d10)
rg$precip<-rep(seq(2.5,137.5, 5), 6)
#######################################
table(rg$decade)
rg$decade<-as.factor(rg$decade)
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade))+geom_line(lwd=2, aes(linetype=decade))+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_fill_gradient(low="blue",high="red")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
rg<-rbind(d60,d70,d80,d90,d00,d10)
rg$precip<-rep(seq(2.5,137.5, 5), 6)
#######################################
table(rg$decade)
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade))+geom_line(lwd=2, aes(linetype=decade))+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_fill_gradient(low="blue",high="red")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_fill_gradient(low="blue",high="red")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_fill_gradient(low="blue",high="red")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_fill_gradient(low="blue",high="orange")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")+
scale_x_continuous(breaks=seq(0,140))+  xlim(0,150)
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+xlab("")+
scale_x_continuous(breaks=seq(0,140))
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("A. Measured diameters")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+
scale_x_continuous(breaks=seq(0,140))
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.3, 0.8))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+
scale_x_continuous(breaks=seq(0,140))
g.dia
g.dia<-ggplot(rg, aes(x=precip, y=prop, col=decade, group=decade))+geom_line(lwd=2)+
xlab("")+ylab("")+ theme(text=element_text(size=18))+theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
scale_y_continuous(expand = c(0, 0))+
scale_color_gradient(low="blue",high="orange")+
ggtitle("Cumulative precip")+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(legend.position = c(0.8, 0.5))+theme(legend.title = element_blank())+ theme(plot.title = element_text(hjus=.02,vjus=-8))+
theme(text=element_text(size=24), legend.key.width = unit(4,"cm"))+
scale_x_continuous(breaks=seq(0,140))
g.dia
