"0",""
"0","## Chapter 2.1"
"0","####################################################"
"0",""
"0","# read in streamflow data"
"0",""
"0","# Package ID: knb-lter-hbr.2.11 Cataloging System:https://pasta.edirepository.org."
"0","# Data set title: Hubbard Brook Experimental Forest: Daily Streamflow by Watershed, 1956 - present."
"0","inUrl1  <- ""https://pasta.lternet.edu/package/data/eml/knb-lter-hbr/2/11/1254d17cbd381556c05afa740d380e78"" "
"0","infile1 <- tempfile()"
"0","try(download.file(inUrl1,infile1,method=""curl""))"
"1","  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
"
"1","                                 Dload  Upload   Total   Spent    Left  Speed
"
"1","  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0 4063k    0 40707    0     0  36729      0  0:01:53  0:00:01  0:01:52 36739100 4063k  100 4063k    0     0  2395k      0  0:00:01  0:00:01 --:--:-- 2394k
"
"0","if (is.na(file.size(infile1))) download.file(inUrl1,infile1,method=""auto"")"
"0",""
"0","dt1 <-read.csv(infile1,header=F "
"0","               ,skip=1"
"0","               ,sep="",""  "
"0","               ,quot='""' "
"0","               , col.names=c("
"0","                 ""DATE"",     "
"0","                 ""WS"",     "
"0","                 ""Streamflow"",     "
"0","                 ""Flag""    ), check.names=TRUE)"
"0","unlink(infile1)"
"0",""
"0","# view the dataset, 182,000 rows"
"0","str(dt1)"
"1","'data.frame':	"
"1",""
"1","182024"
"1",""
"1"," obs. of  "
"1",""
"1","4"
"1",""
"1"," variable"
"1",""
"1","s"
"1",""
"1",":"
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","DATE      "
"1",""
"1",":"
"1"," chr  "
"1",""
"1","""1956-01-01"" ""1956-01-02"" ""1956-01-03"" ""1956-01-04"""
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","WS        "
"1",""
"1",":"
"1"," int  "
"1",""
"1","1 1 1 1 1 1 1 1 1 1"
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","Streamflow"
"1",""
"1",":"
"1"," num  "
"1",""
"1","0.274 0.265 0.251 0.248 0.25"
"1",""
"1"," ..."
"1",""
"1","
"
"1"," "
"1",""
"1","$ "
"1",""
"1","Flag      "
"1",""
"1",":"
"1"," num  "
"1",""
"1","NA NA NA NA NA NA NA NA NA NA"
"1",""
"1"," ..."
"1",""
"1","
"
"0","# Notice that WS is numeric, and we want the watersheds to be factors"
"0","dt1$WS<-as.factor(dt1$WS)"
"0",""
"0","# Provide columns interpreted as a Date by R"
"0","dt1$DATE<-ymd(dt1$DATE) # change how R interprets Date to be a date"
"0","dt1$Year<-year(dt1$DATE)   #add a column for 'year' from date"
"0","dt1$doy<-yday(dt1$DATE) # add day of year"
"0",""
"0","# add in water year"
"0","w.year <- as.numeric(format(dt1$DATE, ""%Y""))"
"0","june.july.sept <- as.numeric(format(dt1$DATE, ""%m"")) < 6"
"0","w.year[june.july.sept] <- w.year[june.july.sept] - 1"
"0",""
"0","dt1$wyear<-w.year"
"0",""
"0","# add in 'water year station'. "
"0","dt1$wys<-paste(dt1$wyear, dt1$WS)"
"0",""
"0",""
"0","# make sure you are only using complete years for the record"
"0","str.obs<-as.data.frame(table(dt1$WS, dt1$wyear))"
"0","str.obs$wys<- paste(str.obs$Var2, str.obs$Var1)"
"0","str.obs[str.obs$Freq<350, ""Use""]<-""incomplete wyear"" # complete is 350+ days"
"0","str.obs[is.na(str.obs$Use),""Use""]<-""complete"""
"0","#head(str.obs, 11)"
"0",""
"0","# bring complete years from str.obs to dt1"
"0","dt1$Use<-str.obs$Use[match(dt1$wys, str.obs$wys)]"
"0","dt1.complete<-dt1[dt1$Use==""complete"",]"
"0",""
"0",""
"0","# calculate the annual sum of streamflow measurements"
"0","annstr<-aggregate(list(Streamflow=dt1.complete$Streamflow), "
"0","              by=list(WS=dt1.complete$WS, wyear=dt1.complete$wyear), FUN=""sum"")"
"0",""
"0","# this makes it nicer for working with other HB datasets"
"0","annstr$WS<-sub(""^"",""W"",annstr$WS)"
"0",""
"0","#  Make a streamflow graph"
"0","g1<-ggplot(annstr, aes(x=wyear, y=Streamflow, col=WS))+"
"0","  geom_point()+geom_line()+"
"0","  ylab(""Steamflow (mm)"")+xlab(""Water year (June 1)"")+"
"0","  theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())"
"0","p1<-ggplotly(g1)"
"0",""
"0","p1 # is now a plotly object"
