#############################################################
# 2_calc_L2_precip_15min.R
# nina.lany@usda.gov
# November 20, 2019
#
# Purpose: This script reads in the processed 15-minute heights 
# (in mm) for each chart, adjusts for when the pen changes direction, 
# caclulates the increment (mm) over the 15-minute interval, 
# and appends the records into one long file.
#
#############################################################
rm(list = ls())

# Check for and install required packages
for (package in c('tidyverse', 'lubridate')) {
  if (!require(package, character.only=T, quietly=T)) {
    install.packages(package)
    library(package, character.only=T)
  }
}

#set working directory so it works on both windows and unix OS:
path <- "~/../../Box/External-HBEF-DATA/precip_charts_digitize"
if( .Platform$OS.type == "unix" )
  path <- "~/Box/External-HBEF-DATA/precip_charts_digitize"

path<-"C:\\Users\\bears\\Box\\precip_charts_digitize" # Alex Y's path

setwd(path)

#set constants
inpermm=0.03937008 #inches per mm conversion factor


#list the directories (one for each year) 
# yeardirs <- list.files(path = "RG1/RG1_L1", pattern = "yr")
## OR ##

#########################################################################################################
#process in chunks, one year at a time:
yeardirs<- c("yr1974")

#make an empty list to hold the data table for each year:
year_out <- list()
#Loop through each year separately:
for (j in seq_along(yeardirs)){
  
  #list the data txt file(s) for that year:
  file_list <- list.files(path = paste0("RG1/RG1_L1/",yeardirs[j]), pattern = "csv")
  
  #make an empty list to hold the data from each trace:
  chart_out <- list()
  
  #Loop through each data file (trace) for that year, reflecting after inflection points and calculating the increment:
  for(i in seq_along(file_list)){
    #read in data    
    dat <- read.csv(paste0("RG1/RG1_L1/", yeardirs[j],"/",file_list[i]), header = F, skip = 1, stringsAsFactors=F)
    names(dat) <- c("DATE", "y") #y is the height in mm in the bucket
    dat$DATE <- as.POSIXct(dat$DATE, format = "%Y-%m-%d %H:%M:%S", tz = "EST")
    
    #get name of trace from file_list and make it a column:
    Trace.strings <- sapply(strsplit(file_list[i], "\\."), "[", 1:2)
    Traces <- paste(Trace.strings[1,], Trace.strings[2,], sep = ".")
    dat$Trace <- Traces
    
    #re-order columns
    dat <- dat[,c("Trace", "DATE", "y")]
    
    #search for and reflect any peaks
    test_vec <- vector(length = 0)
    cutoff <- 148
           for(k in 3:length(dat$y)){
             test_vec[k] <- dat$y[k-1] > cutoff & dat$y[k] - dat$y[k-1] < 0 & dat$y[k-1] - dat$y[k-2] > 0
           }
    
    inflection_point <- dat$DATE[which(test_vec==TRUE)]

    if (length(inflection_point) == 1) {
      dat$y <- ifelse(dat$DATE > inflection_point, 152 + (152 - dat$y), dat$y)
    }
    
    #calculate the increment
    ppt <- vector(length = 0)
    ppt[1] <- NA  #This is the interval ending on the first DATETIME in the file    
    for(k in 2:length(dat$y)){
      ppt[k] <- dat$y[k] - dat$y[k-1]
    }
    
    #make any increment less than or equal to 0.2mm (approx 0.01 inches) equal to 0:
    cutoff2 <- 0.1
    ppt <- ifelse(ppt <= cutoff2, 0, ppt)

    #make a table for that chart
    chart_out[[i]] <- cbind(dat, ppt)
    str(chart_out[[i]])
  }
  
  #make a data table for the year
  year_out[[j]] <- do.call(rbind, chart_out)
   
}

big_dat <- do.call(rbind,year_out)


# #manual changes for things that just can't be coded:
# #RR.0486b (this caused a bigger discrepancy; not sure why)
# big_dat[138174:138180,]
# big_dat$y[which(big_dat$DATE == "1969-07-29 05:30:00")] <- 139
# big_dat$ppt[which(big_dat$DATE == "1969-07-29 05:30:00")] <- 12.7975
# 
# big_dat$y[which(big_dat$DATE == "1969-07-29 05:45:00")] <- 152
# big_dat$ppt[which(big_dat$DATE == "1969-07-29 05:45:00")] <- 12
# 
# big_dat$y[which(big_dat$DATE == "1969-07-29 06:00:00")] <- 156
# big_dat$ppt[which(big_dat$DATE == "1969-07-29 06:00:00")] <- 4
# 
# big_dat$y[which(big_dat$DATE == "1969-07-29 06:15:00")] <- 158 ##add this as a row!!
# big_dat$ppt[which(big_dat$DATE == "1969-07-29 06:15:00")] <- 2
# 
# big_dat$y[which(big_dat$DATE == "1969-07-29 06:30:00")] <- 160 ##add this as a row!!
# big_dat$ppt[which(big_dat$DATE == "1969-07-29 06:30:00")] <- 2
# 
# big_dat$ppt[which(big_dat$DATE == "1969-07-29 08:15:00")] <- 0




#calculate inches of rain (matches historical record)
big_dat$ppt_in=big_dat$ppt*inpermm

#round
big_dat$ppt <- round(big_dat$ppt, 3)
big_dat$ppt_in <- round(big_dat$ppt_in, 3)

#add column for year
big_dat$Year <- format(big_dat$DATE, format = "%Y")

#remove the y columnn
big_dat <- big_dat[,c("Trace", "Year", "DATE", "ppt", "ppt_in")]

str(big_dat)
summary(big_dat)

#write out L2 data
file.name = paste0("RG1/RG1_L2/L2_precip_15min_", yeardirs, ".csv")
write.csv(big_dat, file = file.name, row.names = F)

