#############################################################
# 4_check_methods.R
# nina.lany@usda.gov
# November 22, 2019
#
# Purpose: This script reads in the L2 15-minute data for RG1, 
# aggregates to daily sum, and checks against the long-term PRD record.
#
##########################################################

rm(list = ls())


# Check for and install required packages
for (package in c('tidyverse', 'lubridate')) {
  if (!require(package, character.only=T, quietly=T)) {
    install.packages(package)
    library(package, character.only=T)
  }
}

#set working directory so it works on both windows and unix OS:
path <- "~/../Box/External-HBEF-DATA/precip_charts_digitize"
if( .Platform$OS.type == "unix" )
  path <- "~/Box/External-HBEF-DATA/precip_charts_digitize"

path<-"C:\\Users\\bears\\Box\\precip_charts_digitize" # Alex Y's path


setwd(path)


#read in the 15-minute data

#temporary location:
RG1 <- read.csv("RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1965-1974.csv", stringsAsFactors = F)
RG1$DATE <- as.POSIXct(RG1$DATE, format = "%Y-%m-%d %H:%M:%S", tz = "EST")
#RG1 <- RG1[-which(is.na(RG1$DATE)),]
str(RG1)
summary(RG1)

#aggregate 15-minute to daily values:
RG1_daily <- RG1 %>%
  mutate(DAY = lubridate::floor_date(DATE, unit = "day")) %>%
  group_by(DAY) %>%
  dplyr::summarize(daily_ppt = sum(ppt)) %>% #, na.rm=T
  ungroup()

RG1_daily$DAY <- as.Date(RG1_daily$DAY)
str(RG1_daily)
summary(RG1_daily)

# #RUN ONCE
# #format PRD files that have daily totals recorded by hand (from Amey):
# 
# #create list for storing data
# data <- list()
# 
# #these are the files to format
# file_list <- list.files("document_methods_comparison/prd/prd")
# 
# #format each file in a loop:
# for(i in seq_along(file_list)){
# 
# #load file
# test <- readLines(paste0("document_methods_comparison/prd/prd/",file_list[i]))
# 
# #remove rows containing specific strings:
# test <- test[!grepl("HBEF", test)]
# test <- test[!grepl("MONTH", test)]
# test <- test[!grepl("GAGE", test)]
# #split the string into individual characters:
# test2 <- strsplit(test, "")
# #remove empty rows
# test3 <- test2[lapply(test2,length)>0]
# #put together
# test4 <- do.call(rbind, test3)
# 
# #extract and convert dates
# date <- paste0(test4[,4], test4[,5], test4[,6], test4[,7], test4[,8], test4[,9])
# date <- as.Date(date, format = "%y%m%d")
# ## Now correct the dates that havn't yet occurred (incorrect century)
# date <- ifelse(date > "2015-01-01", format(date, "19%y-%m-%d"), format(date))
# 
# #extract data
# RG1 <- paste0(test4[,11], test4[,12], test4[,13], test4[,14], test4[,15], test4[,16])
# RG1 <- as.numeric(RG1)
# RG6 <- paste0(test4[,17], test4[,18], test4[,19], test4[,20], test4[,21], test4[,22])
# RG6 <- as.numeric(RG6)
# RG10 <- paste0(test4[,23], test4[,24], test4[,25], test4[,26], test4[,27], test4[,28])
# RG10 <- as.numeric(RG10)
# RG14 <- paste0(test4[,29], test4[,30], test4[,31], test4[,32], test4[,33], test4[,34])
# RG14 <- as.numeric(RG14)
# 
# #add to data list
# data[[i]] <- cbind(as.character(date), RG1, RG6, RG10, RG14)
# 
# #clean up:
# rm(test, test2, test3, test4, RG1, RG6, RG10, RG14, date)
# }
# 
# #put it all together and format:
# dat <- as.data.frame(do.call(rbind, data))
# names(dat) <- c("DAY", "RG1", "RG6", "RG10", "RG14")
# dat$DAY <- as.Date(dat$DAY)
# dat <- dat %>%
#   mutate_if(is.factor, as.character) %>%
#   mutate_if(is.character, as.numeric)
# str(dat)
# summary(dat)
# 
# write.csv(dat, file = "document_methods_comparison/prd/PRD_1965-2011.csv", row.names = F)

#read in daily totals 1965-2011 read by hand from the charts (obtained digital PRD files from Amey)
PRD <- read.csv("document_methods_comparison/prd/PRD_1965-2011.csv", stringsAsFactors=F)
PRD$DAY <- as.Date(PRD$DAY, tz = "EST")
PRD <- PRD[,c("DAY", "RG1")]
#read in daily totals for RG1 1956 - 1964 read by hand off the charts (in inches) and entered into a spreadsheet by Nina Lany and Sam Auger on 1/15/2020:
PRD2 <- read.csv("document_methods_comparison/prd/PRD_1956-1964.csv", stringsAsFactors=F)
PRD2$RG1 <- PRD2$RG1 * 25.4 #mm per inch conversion factor
colnames(PRD2) <- c("DAY", "RG1")
PRD2$DAY <- as.Date(PRD2$DAY, format = "%m/%d/%Y", tz = "EST")
#combine
PRD <- rbind(PRD2, PRD)

str(PRD)
summary(PRD)
str(RG1_daily)

#merge the two:
dat <- merge(RG1_daily, PRD, by = "DAY", all.x = T, all.y=F)
str(dat)
summary(dat)

#plot
pdf(file = "document_methods_comparison/figs/hand_vs_digitized_1975-1984.pdf", height = 6, width = 6)
plot(dat$RG1, dat$daily_ppt, xlim = c(0,130), ylim = c(0,130), xlab = "Daily precipitation sum (mm) - by hand", ylab = "Daily precipitation sum (mm) - digitized")
abline(a=0, b=1)
dev.off()

#AlexY added this graph in ggplotly. useful for hover-over identification. Might need to library(plotly) and ggplot2
ggplotly( ggplot(dat, aes(x=RG1, y=daily_ppt, group=DAY))+geom_point()+
  xlab("Daily precip (mm) RG1- by hand")+ylab("Daily precip (mm) - digitized"))

#look closely at days that are different
comp <- dat[complete.cases(dat),]
comp$diffs <- comp$daily_ppt - comp$RG1 #digitized - manual
str(comp)
summary(comp)


summary(abs(comp$diffs))
quantile(abs(comp$diffs), .95)


#plot
pdf(file = "document_methods_comparison/figs/diffs_boxplot_1965-1974.pdf", height = 4, width = 6)
par(mfrow = c(1,2))
boxplot(comp$diffs, ylab = "Precipitation difference (mm)")
abline(h = 3, col = "red", lty = 2)
abline(h = -3, col = "red", lty = 2)
hist(comp$diffs, breaks = 100, xlab = "Precipitation difference (mm)", main = "")
abline(v=0, col ="red")
dev.off()


#which days have difference greater than 5 mm (0.2 in) and convert to inches (makes it easier to check charts):
QC <- comp[which(abs(comp$diffs) > 5),]
QC <- QC %>%
  mutate(daily_ppt = daily_ppt/25.4) %>%
  mutate(RG1 = RG1/25.4) %>%
  mutate(diffs = diffs/25.4)
str(QC)
summary(QC)

QC

write.csv(QC, file = "RG1/scripts/RG1_daily_diffs_1965-1974_July27.csv", row.names = F)







#########  To identify biggest areas, go to the weekly differences May are where digitize = 0.

head(dat)
dat$week<-week(dat$DAY)
dat$year<-year(dat$DAY)
dat$month<-month(dat$DAY)
da<-aggregate(list(PRD=dat$RG1, digitize=dat$daily_ppt), by=list(week=dat$week, year=dat$year, month=dat$month), FUN="sum", na.rm=T)


ggplot(da, aes(x=digitize, y=PRD,col=month))+geom_point()+
  geom_abline(slope=.9538, intercept= 10.95)+
  geom_abline(slope=.9538, intercept= -9.95)+coord_fixed()+
  ggtitle("Weekly comparisons- many weeks with PRD but no digitized!")

not<-da[da$digitize==0,]
not<-not[not$PRD!=0,]
not<-not[not$PRD>5,]
sort(not$PRD)

write.csv(not, file = "RG1/scripts/RG1_weekly_diffs_1965-1974_July27.csv", row.names = F)




