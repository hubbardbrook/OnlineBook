#############################################################
# 3_QC_L2_precip_15min.R
# nina.lany@usda.gov
# December 16, 2020
#
# Purpose: This script reads in the precip data from each individual year,
# appends the years into one long file, and does some QC.
#
#############################################################
rm(list = ls())

# Check for and install required packages
for (package in c('tidyverse', 'lubridate', 'zoo')) {
  if (!require(package, character.only=T, quietly=T)) {
    install.packages(package)
    library(package, character.only=T)
  }
}

#set working directory so it works on both windows and unix OS:
path <- "~/../Box/External-HBEF-DATA/precip_charts_digitize"
if( .Platform$OS.type == "unix" )
  path <- "~/Box/External-HBEF-DATA/precip_charts_digitize"

path<-"C:\\Users\\bears\\Box\\precip_charts_digitize" # Alex Y's path

setwd(path)


#make an empty list to hold the data table for each year:
year_out <- list()

#list the data txt file(s) for each year:
file_list <- list.files(path = "RG1/RG1_L2", pattern = "yr")

  file_list
  
  #Loop through each data file (trace) for that year
  for(i in seq_along(file_list)){
    #read in data    
    dat <- read.csv(paste0("RG1/RG1_L2/",file_list[i]), stringsAsFactors=F)
    dat$DATE <- as.POSIXct(dat$DATE, format = "%Y-%m-%d %H:%M:%S", tz = "EST")
    
    #make a table for that chart
    year_out[[i]] <- dat
  
}

big_dat1 <- do.call(rbind,year_out)




head(big_dat1)


table(as.data.frame(table(big_dat1$DATE,big_dat1$Trace))$Freq, Var2)


# AY made, you can erase.   Big table takes long time.
# af<-as.data.frame(table(big_dat1$DATE,big_dat1$Year))
# taf<-as.data.frame(table(af[af$Freq=="2","Var2"]))
# str(taf)
# taf$Var1<-as.numeric(as.factor(taf$Var1))
# ggplot(taf, aes(x=Var1, y=Freq))+geom_bar(stat="identity")


#Drop ppt_in and get rid of rows with ppt = NA (they cause duplicates later): 
big_dat1 <- big_dat1 %>%
  select(-c(ppt_in)) %>%
  na.omit()


#manual clock adjustments add hh:mm:
big_dat1$DATE[which(big_dat1$Trace == "RR.2851a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.2851a")] + (6.75*60*60) #add 6:45
big_dat1 <- big_dat1[-which(big_dat1$Trace == "RR.2308b" & big_dat1$DATE > as.POSIXct("2000-04-04 07:30:00")),] #remove two rows
big_dat1$DATE[which(big_dat1$Trace == "RR.2817a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.2817a")] - (14*60*60) #subtract 14:00
big_dat1$DATE[which(big_dat1$Trace == "RR.2779a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.2779a")] - (13*60*60) #subtract 13:00
big_dat1$DATE[which(big_dat1$Trace == "RR.1805d")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1805d")] + (60*60) #add 1 hour (pen was pushed back when it was adjusted)
big_dat1$DATE[which(big_dat1$Trace == "RR.1807a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.18007a")] + (30*60) #add 30 minutes. Pen ot started in correct place.
big_dat1$DATE[which(big_dat1$Trace == "RR.1868a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1868a")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1868b")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1868b")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1872a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1872a")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1903a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1903a")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1903b")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1903b")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1928a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1928a")] + (1.5*60*60) #add 1.5 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1032a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1032a")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1032b")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1032b")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1032c")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1032c")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1218a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1218a")] + (4*60*60) #add 4 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1218b")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1218b")] + (4*60*60) #add 4 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1391a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1391a")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1391b")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1391b")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.1391c")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.1391c")] - (12*60*60) #subtract 12 hours
                  ### 1965-1974 decade. manual clock adjustment.
big_dat1$DATE[which(big_dat1$Trace == "RR.0508a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.0508a")] - (12*60*60) #subtract 12 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.0508b")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.0508b")] - (24*60*60) #subtract 24 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.0565a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.0565a")] - (1*60*60) #subtract 1 hour for 5 mm difference
big_dat1$DATE[which(big_dat1$Trace == "RR.0583a")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.0583a")] - (3*60*60) #subtract 3 hours
big_dat1$DATE[which(big_dat1$Trace == "RR.0707b")] <- big_dat1$DATE[which(big_dat1$Trace == "RR.0707b")] + (4.5*60*60) #add 4.5 hours hours


#0ther manual adjustments:
big_dat1$ppt[which(big_dat1$Trace == "RR.2346a")] <- NA #pen was reversed. Just give up.

head(big_dat1)

#Drop Trace to better find dups (or don't do this to better find out what causes the problems)
big_dat <- big_dat1 %>%
  select(-Trace)

#get rid of duplicates:
str(big_dat)
length(which(duplicated(big_dat)))
big_dat <- big_dat[-which(duplicated(big_dat)),]
summary(big_dat)


#which datetimes are still duplicated?
dups1 <- which(duplicated(big_dat$DATE))
dups2 <- which(duplicated(big_dat$DATE, fromLast = T))
temp <- big_dat[c(dups1, dups2),]
temp <- temp[order(temp$DATE),]
str(temp)
summary(temp)
#write.csv(temp, file = "RG1/scripts/RG1_dups.csv", row.names = F)

tapply(temp$ppt, temp$Year, length)



#remove 0 precip values between 1985-11-04 11:50 and 1985-11-5-10:30. They are duplicates caused by tracing too far when 0 precip in RR.1557:
#big_dat[which(big_dat$DATE > as.POSIXct("1985-11-04 011:50:00") & big_dat$DATE < as.POSIXct("1985-11-05 10:45:00") & big_dat$ppt == 0),]
big_dat <- big_dat[-which(big_dat$DATE > as.POSIXct("1985-11-04 011:50:00") & big_dat$DATE < as.POSIXct("1985-11-05 10:45:00") & big_dat$ppt == 0),]


#temporarily remove DATE duplicates just to test the rest of the code:
big_dat <- big_dat[which(!duplicated(big_dat$DATE)),]


str(big_dat)
summary(big_dat)

#check for very large values:
big <- subset(big_dat, ppt > 15)
big
#big_dat$ppt[which(big_dat$DATE > as.POSIXct("2008-12-03 11:30:00") & big_dat$DATE < as.POSIXct("2008-12-03 14:30:00"))] <- 0
#big_dat$ppt_in[which(big_dat$DATE > as.POSIXct("2008-12-03 11:30:00") & big_dat$DATE < as.POSIXct("2008-12-03 14:30:00"))] <- 0
## yes, the 37 mm of rain on 1970-08-01 13:00:00 appears to be correct by looking at the chart.
#### As of July 2022, Alex sees 10 'big' precip events.

#fill in missing timestamps:
DATE <- seq(min(big_dat$DATE), max(big_dat$DATE), by = "15 min")
datetime <- as.data.frame((DATE))
colnames(datetime) <- "DATE"
str(datetime)
big_dat <- merge(big_dat, datetime, by = "DATE", all = T)
str(big_dat)
summary(big_dat)

#manually fill any gaps we can figure out:
big_dat$ppt[which(big_dat$DATE > as.POSIXct("2009-08-23 08:15:00") & big_dat$DATE < as.POSIXct("2009-08-25 09:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("2007-08-08 18:15:00") & big_dat$DATE < as.POSIXct("2007-08-14 09:15:00"))] <- NA
big_dat$ppt[which(big_dat$DATE > as.POSIXct("2003-04-21 08:15:00") & big_dat$DATE < as.POSIXct("2003-04-22 11:45:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("2003-01-27 11:30:00") & big_dat$DATE < as.POSIXct("2003-01-28 04:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("2000-10-01 08:15:00") & big_dat$DATE < as.POSIXct("2000-10-02 010:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1999-12-28 07:15:00") & big_dat$DATE < as.POSIXct("1999-12-29 13:15:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1998-12-26 10:15:00") & big_dat$DATE < as.POSIXct("1998-12-28 11:45:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1998-05-23 10:00:00") & big_dat$DATE < as.POSIXct("1998-05-27 10:45:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1998-03-28 12:30:00") & big_dat$DATE < as.POSIXct("1998-03-30 11:45:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1997-12-15 0:00:00") & big_dat$DATE < as.POSIXct("1997-12-22 11:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1996-03-17 11:45:00") & big_dat$DATE < as.POSIXct("1996-03-18 13:15:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1995-10-23 09:15:00") & big_dat$DATE < as.POSIXct("1995-10-27 06:45:00"))] <- 0
big_dat$ppt[which(big_dat$DATE == as.POSIXct("1995-10-24 23:15:00"))] <- 0.08
#big_dat$ppt[which(big_dat$DATE > as.POSIXct("1996-06-01 05:45:00") & big_dat$DATE < as.POSIXct("1996-06-05 06:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE > as.POSIXct("2007-08-07 07:30:00") & big_dat$DATE < as.POSIXct("2007-08-08 02:15:00"))] <- 0
big_dat$ppt[which(big_dat$DATE == as.POSIXct("2006-05-15 07:15:00"))] <- NA
big_dat$ppt[which(big_dat$DATE > as.POSIXct("2005-06-30 00:00:00") & big_dat$DATE < as.POSIXct("2005-07-04 00:00:00"))] <- NA
big_dat$ppt[which(big_dat$DATE > as.POSIXct("1995-12-08 12:30:00") & big_dat$DATE < as.POSIXct("1995-12-12 07:15:00"))] <- NA

big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1985-11-04 00:15:00") & big_dat$DATE < as.POSIXct("1985-11-05 06:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1987-09-28 07:15:00") & big_dat$DATE < as.POSIXct("1987-09-29 08:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1987-12-29 16:00:00") & big_dat$DATE < as.POSIXct("1988-01-01 10:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1987-12-29 16:00:00") & big_dat$DATE < as.POSIXct("1988-01-01 10:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1990-04-23 07:45:00") & big_dat$DATE < as.POSIXct("1990-04-27 06:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1991-04-05 06:00:00") & big_dat$DATE < as.POSIXct("1990-04-08 09:45:00"))] <- 0
#add in two TIMESTAMPS during above period that did have precip (RR.1840b was not digitized):
big_dat$ppt[which(big_dat$DATE == as.POSIXct("1991-04-05 16:00:00"))] <- (0.04 * 25.4) #convert 0.04" to mm
big_dat$ppt[which(big_dat$DATE == as.POSIXct("1991-04-06 17:15:00"))] <- (0.07 * 25.4) #convert 0.04" to mm
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1991-07-09 08:15:00") & big_dat$DATE < as.POSIXct("1991-07-10 13:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1993-03-30 08:15:00") & big_dat$DATE < as.POSIXct("1993-03-31 13:45:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1993-07-16 20:00:00") & big_dat$DATE < as.POSIXct("1993-07-19 08:15:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1993-07-23 00:00:00") & big_dat$DATE < as.POSIXct("1993-07-26 09:15:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1994-02-04 06:00:00") & big_dat$DATE < as.POSIXct("1994-02-07 13:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1994-02-19 13:30:00") & big_dat$DATE < as.POSIXct("1994-02-22 16:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1994-06-26 17:45:00") & big_dat$DATE < as.POSIXct("1994-06-27 11:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1994-07-04 00:15:00") & big_dat$DATE < as.POSIXct("1994-07-05 11:00:00"))] <- 0

big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1976-09-13 12:00:00") & big_dat$DATE < as.POSIXct("1976-09-17 12:00:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1978-03-28 00:00:00") & big_dat$DATE < as.POSIXct("1978-03-28 10:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1978-07-04 06:15:00") & big_dat$DATE < as.POSIXct("1978-07-05 08:45:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1979-02-10 06:45:00") & big_dat$DATE < as.POSIXct("1979-02-12 10:15:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1980-01-03 13:45:00") & big_dat$DATE < as.POSIXct("1980-01-07 13:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1980-02-09 08:00:00") & big_dat$DATE < as.POSIXct("1980-02-11 13:30:00"))] <- 0

big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1981-10-28 12:50:00") & big_dat$DATE < as.POSIXct("1981-11-02 16:30:00"))] <- 0
big_dat$ppt[which(big_dat$DATE >= as.POSIXct("1981-10-28 00:15:00") & big_dat$DATE < as.POSIXct("1981-10-28 12:50:00"))] <- NA

#interpolate any missing values for breaks less than 24 hours:
#what maximum gap length to fill with linear interp? For, now, one day.
big_dat$ppt <- na.approx(big_dat$ppt, method = "linear", maxgap = 96)
summary(big_dat)

test <- big_dat[which(is.na(big_dat$ppt)),]
str(test)
#write.csv(test, "RG1/scripts/RG1_gaps.csv", row.names = F)

## remove columns and round:
big_dat <- big_dat %>%
  select(-Year) %>%
  mutate(ppt = round(ppt,1))

str(big_dat)
summary(big_dat)

################################################################################

################################################################################

#temporary location. Pick a decade
part <- subset(big_dat, DATE >= as.POSIXct("1995-01-01 00:00:00") & DATE < as.POSIXct("2012-01-01 00:00:00"))

head(part)
tail(part) # here you can see the start and end of the 'part'.

##  Choose your decade to write the file for
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1955-1964.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1965-1974.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1975-1984.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1985-1994.csv", row.names = F)
#write.csv(part, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1_1995-2011.csv", row.names = F)
#write.csv(big_dat, file = "RG1/RG1_L3_cleaned/L3_precip_15min_RG1.csv", row.names = F)
